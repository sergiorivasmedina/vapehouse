{"ast":null,"code":"'use strict';\n\nif (require('../internals/descriptors')) {\n  var global = require('../internals/global');\n\n  var $export = require('../internals/export');\n\n  var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-arrays-constructors-requires-wrappers');\n\n  var ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\n  var ArrayBufferModule = require('../internals/array-buffer');\n\n  var anInstance = require('../internals/an-instance');\n\n  var createPropertyDescriptor = require('../internals/create-property-descriptor');\n\n  var hide = require('../internals/hide');\n\n  var toLength = require('../internals/to-length');\n\n  var toIndex = require('../internals/to-index');\n\n  var toOffset = require('../internals/to-offset');\n\n  var toPrimitive = require('../internals/to-primitive');\n\n  var has = require('../internals/has');\n\n  var classof = require('../internals/classof');\n\n  var isObject = require('../internals/is-object');\n\n  var create = require('../internals/object-create');\n\n  var setPrototypeOf = require('../internals/object-set-prototype-of');\n\n  var getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\n  var typedArrayFrom = require('../internals/typed-array-from');\n\n  var arrayForEach = require('../internals/array-methods')(0);\n\n  var setSpecies = require('../internals/set-species');\n\n  var definePropertyModule = require('../internals/object-define-property');\n\n  var getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\n\n  var InternalStateModule = require('../internals/internal-state');\n\n  var getInternalState = InternalStateModule.get;\n  var setInternalState = InternalStateModule.set;\n  var nativeDefineProperty = definePropertyModule.f;\n  var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  var RangeError = global.RangeError;\n  var ArrayBuffer = ArrayBufferModule.ArrayBuffer;\n  var DataView = ArrayBufferModule.DataView;\n  var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\n  var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;\n  var TypedArray = ArrayBufferViewCore.TypedArray;\n  var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;\n  var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\n  var isTypedArray = ArrayBufferViewCore.isTypedArray;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var WRONG_LENGTH = 'Wrong length';\n\n  var fromList = function fromList(C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = new (aTypedArrayConstructor(C))(length);\n\n    while (length > index) {\n      result[index] = list[index++];\n    }\n\n    return result;\n  };\n\n  var addGetter = function addGetter(it, key) {\n    nativeDefineProperty(it, key, {\n      get: function get() {\n        return getInternalState(this)[key];\n      }\n    });\n  };\n\n  var isArrayBuffer = function isArrayBuffer(it) {\n    var klass;\n    return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';\n  };\n\n  var isTypedArrayIndex = function isTypedArrayIndex(target, key) {\n    return isTypedArray(target) && typeof key != 'symbol' && key in target && String(+key) == String(key);\n  };\n\n  var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {\n    return isTypedArrayIndex(target, key = toPrimitive(key, true)) ? createPropertyDescriptor(2, target[key]) : nativeGetOwnPropertyDescriptor(target, key);\n  };\n\n  var wrappedDefineProperty = function defineProperty(target, key, descriptor) {\n    if (isTypedArrayIndex(target, key = toPrimitive(key, true)) && isObject(descriptor) && has(descriptor, 'value') && !has(descriptor, 'get') && !has(descriptor, 'set') // TODO: add validation descriptor w/o calling accessors\n    && !descriptor.configurable && (!has(descriptor, 'writable') || descriptor.writable) && (!has(descriptor, 'enumerable') || descriptor.enumerable)) {\n      target[key] = descriptor.value;\n      return target;\n    }\n\n    return nativeDefineProperty(target, key, descriptor);\n  };\n\n  if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;\n    definePropertyModule.f = wrappedDefineProperty;\n    addGetter(TypedArrayPrototype, 'buffer');\n    addGetter(TypedArrayPrototype, 'byteOffset');\n    addGetter(TypedArrayPrototype, 'byteLength');\n    addGetter(TypedArrayPrototype, 'length');\n  }\n\n  $export({\n    target: 'Object',\n    stat: true,\n    forced: !NATIVE_ARRAY_BUFFER_VIEWS\n  }, {\n    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,\n    defineProperty: wrappedDefineProperty\n  }); // eslint-disable-next-line max-statements\n\n  module.exports = function (TYPE, BYTES, wrapper, CLAMPED) {\n    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + TYPE;\n    var SETTER = 'set' + TYPE;\n    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];\n    var TypedArrayConstructor = NativeTypedArrayConstructor;\n    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;\n    var exported = {};\n\n    var getter = function getter(that, index) {\n      var data = getInternalState(that);\n      return data.view[GETTER](index * BYTES + data.byteOffset, true);\n    };\n\n    var setter = function setter(that, index, value) {\n      var data = getInternalState(that);\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;\n      data.view[SETTER](index * BYTES + data.byteOffset, value, true);\n    };\n\n    var addElement = function addElement(that, index) {\n      nativeDefineProperty(that, index, {\n        get: function get() {\n          return getter(this, index);\n        },\n        set: function set(value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n\n    if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {\n        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        var index = 0;\n        var byteOffset = 0;\n        var buffer, byteLength, length;\n\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new ArrayBuffer(byteLength);\n        } else if (isArrayBuffer(data)) {\n          buffer = data;\n          byteOffset = toOffset(offset, BYTES);\n          var $len = data.byteLength;\n\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - byteOffset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);\n          }\n\n          length = byteLength / BYTES;\n        } else if (isTypedArray(data)) {\n          return fromList(TypedArrayConstructor, data);\n        } else {\n          return typedArrayFrom.call(TypedArrayConstructor, data);\n        }\n\n        setInternalState(that, {\n          buffer: buffer,\n          byteOffset: byteOffset,\n          byteLength: byteLength,\n          length: length,\n          view: new DataView(buffer)\n        });\n\n        while (index < length) {\n          addElement(that, index++);\n        }\n      });\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);\n    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {\n      TypedArrayConstructor = wrapper(function (that, data, typedArrayOffset, $length) {\n        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));\n        if (isArrayBuffer(data)) return $length !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length) : typedArrayOffset !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES)) : new NativeTypedArrayConstructor(data);\n        if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);\n        return typedArrayFrom.call(TypedArrayConstructor, data);\n      });\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      arrayForEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {\n        if (!(key in TypedArrayConstructor)) hide(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);\n      });\n      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;\n    }\n\n    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {\n      hide(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);\n    }\n\n    if (TYPED_ARRAY_TAG) hide(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);\n    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;\n    $export({\n      global: true,\n      forced: TypedArrayConstructor != NativeTypedArrayConstructor,\n      sham: !NATIVE_ARRAY_BUFFER_VIEWS\n    }, exported);\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {\n      hide(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {\n      hide(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    setSpecies(CONSTRUCTOR_NAME);\n  };\n} else module.exports = function () {\n  /* empty */\n};","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/internals/typed-array-constructor.js"],"names":["require","global","$export","TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS","ArrayBufferViewCore","ArrayBufferModule","anInstance","createPropertyDescriptor","hide","toLength","toIndex","toOffset","toPrimitive","has","classof","isObject","create","setPrototypeOf","getOwnPropertyNames","f","typedArrayFrom","arrayForEach","setSpecies","definePropertyModule","getOwnPropertyDescriptorModule","InternalStateModule","getInternalState","get","setInternalState","set","nativeDefineProperty","nativeGetOwnPropertyDescriptor","RangeError","ArrayBuffer","DataView","NATIVE_ARRAY_BUFFER_VIEWS","TYPED_ARRAY_TAG","TypedArray","TypedArrayPrototype","aTypedArrayConstructor","isTypedArray","BYTES_PER_ELEMENT","WRONG_LENGTH","fromList","C","list","index","length","result","addGetter","it","key","isArrayBuffer","klass","isTypedArrayIndex","target","String","wrappedGetOwnPropertyDescriptor","getOwnPropertyDescriptor","wrappedDefineProperty","defineProperty","descriptor","configurable","writable","enumerable","value","stat","forced","module","exports","TYPE","BYTES","wrapper","CLAMPED","CONSTRUCTOR_NAME","GETTER","SETTER","NativeTypedArrayConstructor","TypedArrayConstructor","TypedArrayConstructorPrototype","prototype","exported","getter","that","data","view","byteOffset","setter","Math","round","addElement","offset","$length","buffer","byteLength","$len","undefined","call","typedArrayOffset","constructor","sham"],"mappings":"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","sourcesContent":["'use strict';\nif (require('../internals/descriptors')) {\n  var global = require('../internals/global');\n  var $export = require('../internals/export');\n  var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-arrays-constructors-requires-wrappers');\n  var ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n  var ArrayBufferModule = require('../internals/array-buffer');\n  var anInstance = require('../internals/an-instance');\n  var createPropertyDescriptor = require('../internals/create-property-descriptor');\n  var hide = require('../internals/hide');\n  var toLength = require('../internals/to-length');\n  var toIndex = require('../internals/to-index');\n  var toOffset = require('../internals/to-offset');\n  var toPrimitive = require('../internals/to-primitive');\n  var has = require('../internals/has');\n  var classof = require('../internals/classof');\n  var isObject = require('../internals/is-object');\n  var create = require('../internals/object-create');\n  var setPrototypeOf = require('../internals/object-set-prototype-of');\n  var getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n  var typedArrayFrom = require('../internals/typed-array-from');\n  var arrayForEach = require('../internals/array-methods')(0);\n  var setSpecies = require('../internals/set-species');\n  var definePropertyModule = require('../internals/object-define-property');\n  var getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\n  var InternalStateModule = require('../internals/internal-state');\n  var getInternalState = InternalStateModule.get;\n  var setInternalState = InternalStateModule.set;\n  var nativeDefineProperty = definePropertyModule.f;\n  var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  var RangeError = global.RangeError;\n  var ArrayBuffer = ArrayBufferModule.ArrayBuffer;\n  var DataView = ArrayBufferModule.DataView;\n  var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\n  var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;\n  var TypedArray = ArrayBufferViewCore.TypedArray;\n  var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;\n  var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\n  var isTypedArray = ArrayBufferViewCore.isTypedArray;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var WRONG_LENGTH = 'Wrong length';\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = new (aTypedArrayConstructor(C))(length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key) {\n    nativeDefineProperty(it, key, { get: function () {\n      return getInternalState(this)[key];\n    } });\n  };\n\n  var isArrayBuffer = function (it) {\n    var klass;\n    return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';\n  };\n\n  var isTypedArrayIndex = function (target, key) {\n    return isTypedArray(target)\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n\n  var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {\n    return isTypedArrayIndex(target, key = toPrimitive(key, true))\n      ? createPropertyDescriptor(2, target[key])\n      : nativeGetOwnPropertyDescriptor(target, key);\n  };\n\n  var wrappedDefineProperty = function defineProperty(target, key, descriptor) {\n    if (isTypedArrayIndex(target, key = toPrimitive(key, true))\n      && isObject(descriptor)\n      && has(descriptor, 'value')\n      && !has(descriptor, 'get')\n      && !has(descriptor, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !descriptor.configurable\n      && (!has(descriptor, 'writable') || descriptor.writable)\n      && (!has(descriptor, 'enumerable') || descriptor.enumerable)\n    ) {\n      target[key] = descriptor.value;\n      return target;\n    } return nativeDefineProperty(target, key, descriptor);\n  };\n\n  if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;\n    definePropertyModule.f = wrappedDefineProperty;\n    addGetter(TypedArrayPrototype, 'buffer');\n    addGetter(TypedArrayPrototype, 'byteOffset');\n    addGetter(TypedArrayPrototype, 'byteLength');\n    addGetter(TypedArrayPrototype, 'length');\n  }\n\n  $export({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {\n    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,\n    defineProperty: wrappedDefineProperty\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (TYPE, BYTES, wrapper, CLAMPED) {\n    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + TYPE;\n    var SETTER = 'set' + TYPE;\n    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];\n    var TypedArrayConstructor = NativeTypedArrayConstructor;\n    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;\n    var exported = {};\n\n    var getter = function (that, index) {\n      var data = getInternalState(that);\n      return data.view[GETTER](index * BYTES + data.byteOffset, true);\n    };\n\n    var setter = function (that, index, value) {\n      var data = getInternalState(that);\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;\n      data.view[SETTER](index * BYTES + data.byteOffset, value, true);\n    };\n\n    var addElement = function (that, index) {\n      nativeDefineProperty(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n\n    if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {\n        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        var index = 0;\n        var byteOffset = 0;\n        var buffer, byteLength, length;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new ArrayBuffer(byteLength);\n        } else if (isArrayBuffer(data)) {\n          buffer = data;\n          byteOffset = toOffset(offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - byteOffset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (isTypedArray(data)) {\n          return fromList(TypedArrayConstructor, data);\n        } else {\n          return typedArrayFrom.call(TypedArrayConstructor, data);\n        }\n        setInternalState(that, {\n          buffer: buffer,\n          byteOffset: byteOffset,\n          byteLength: byteLength,\n          length: length,\n          view: new DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);\n    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {\n      TypedArrayConstructor = wrapper(function (that, data, typedArrayOffset, $length) {\n        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\n        if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));\n        if (isArrayBuffer(data)) return $length !== undefined\n          ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)\n          : typedArrayOffset !== undefined\n            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))\n            : new NativeTypedArrayConstructor(data);\n        if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);\n        return typedArrayFrom.call(TypedArrayConstructor, data);\n      });\n\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\n      arrayForEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {\n        if (!(key in TypedArrayConstructor)) hide(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);\n      });\n      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;\n    }\n\n    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {\n      hide(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);\n    }\n\n    if (TYPED_ARRAY_TAG) hide(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);\n\n    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;\n\n    $export({\n      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS\n    }, exported);\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {\n      hide(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {\n      hide(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);\n    }\n\n    setSpecies(CONSTRUCTOR_NAME);\n  };\n} else module.exports = function () { /* empty */ };\n"]},"metadata":{},"sourceType":"script"}