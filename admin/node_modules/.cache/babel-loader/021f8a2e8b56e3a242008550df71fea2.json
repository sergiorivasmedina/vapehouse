{"ast":null,"code":"var toIndexedObject = require('../internals/to-indexed-object');\n\nvar toLength = require('../internals/to-length');\n\nvar toAbsoluteIndex = require('../internals/to-absolute-index'); // `Array.prototype.{ indexOf, includes }` methods implementation\n// false -> Array#indexOf\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n// true  -> Array#includes\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n\n\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value; // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++]; // eslint-disable-next-line no-self-compare\n\n      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }\n    return !IS_INCLUDES && -1;\n  };\n};","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/internals/array-includes.js"],"names":["toIndexedObject","require","toLength","toAbsoluteIndex","module","exports","IS_INCLUDES","$this","el","fromIndex","O","length","index","value"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,gCAAD,CAA7B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,eAAe,GAAGF,OAAO,CAAC,gCAAD,CAA7B,C,CAEA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,WAAV,EAAuB;AACtC,SAAO,UAAUC,KAAV,EAAiBC,EAAjB,EAAqBC,SAArB,EAAgC;AACrC,QAAIC,CAAC,GAAGV,eAAe,CAACO,KAAD,CAAvB;AACA,QAAII,MAAM,GAAGT,QAAQ,CAACQ,CAAC,CAACC,MAAH,CAArB;AACA,QAAIC,KAAK,GAAGT,eAAe,CAACM,SAAD,EAAYE,MAAZ,CAA3B;AACA,QAAIE,KAAJ,CAJqC,CAKrC;AACA;;AACA,QAAIP,WAAW,IAAIE,EAAE,IAAIA,EAAzB,EAA6B,OAAOG,MAAM,GAAGC,KAAhB,EAAuB;AAClDC,MAAAA,KAAK,GAAGH,CAAC,CAACE,KAAK,EAAN,CAAT,CADkD,CAElD;;AACA,UAAIC,KAAK,IAAIA,KAAb,EAAoB,OAAO,IAAP,CAH8B,CAIpD;AACC,KALD,MAKO,OAAMF,MAAM,GAAGC,KAAf,EAAsBA,KAAK,EAA3B;AAA+B,UAAIN,WAAW,IAAIM,KAAK,IAAIF,CAA5B,EAA+B;AACnE,YAAIA,CAAC,CAACE,KAAD,CAAD,KAAaJ,EAAjB,EAAqB,OAAOF,WAAW,IAAIM,KAAf,IAAwB,CAA/B;AACtB;AAFM;AAEL,WAAO,CAACN,WAAD,IAAgB,CAAC,CAAxB;AACH,GAfD;AAgBD,CAjBD","sourcesContent":["var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\n// false -> Array#indexOf\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n// true  -> Array#includes\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n"]},"metadata":{},"sourceType":"script"}