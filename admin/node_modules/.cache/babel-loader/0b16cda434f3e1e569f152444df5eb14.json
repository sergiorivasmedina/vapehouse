{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar toLength = require('../internals/to-length');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar classof = require('../internals/classof');\n\nvar getFlags = require('../internals/regexp-flags');\n\nvar hide = require('../internals/hide');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar advanceStringIndex = require('../internals/advance-string-index');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar MATCH_ALL = wellKnownSymbol('matchAll');\nvar REGEXP_STRING = 'RegExp String';\nvar REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);\nvar RegExpPrototype = RegExp.prototype;\nvar regExpBuiltinExec = RegExpPrototype.exec;\n\nvar regExpExec = function regExpExec(R, S) {\n  var exec = R.exec;\n  var result;\n\n  if (typeof exec == 'function') {\n    result = exec.call(R, S);\n    if (typeof result != 'object') throw TypeError('Incorrect exec result');\n    return result;\n  }\n\n  return regExpBuiltinExec.call(R, S);\n}; // eslint-disable-next-line max-len\n\n\nvar $RegExpStringIterator = createIteratorConstructor(function RegExpStringIterator(regexp, string, global, fullUnicode) {\n  setInternalState(this, {\n    type: REGEXP_STRING_ITERATOR,\n    regexp: regexp,\n    string: string,\n    global: global,\n    unicode: fullUnicode,\n    done: false\n  });\n}, REGEXP_STRING, function next() {\n  var state = getInternalState(this);\n  if (state.done) return {\n    value: undefined,\n    done: true\n  };\n  var R = state.regexp;\n  var S = state.string;\n  var match = regExpExec(R, S);\n  if (match === null) return {\n    value: undefined,\n    done: state.done = true\n  };\n\n  if (state.global) {\n    if (String(match[0]) == '') R.lastIndex = advanceStringIndex(S, toLength(R.lastIndex), state.unicode);\n    return {\n      value: match,\n      done: false\n    };\n  }\n\n  state.done = true;\n  return {\n    value: match,\n    done: false\n  };\n});\n\nvar $matchAll = function $matchAll(string) {\n  var R = anObject(this);\n  var S = String(string);\n  var C, flagsValue, flags, matcher, global, fullUnicode;\n  C = speciesConstructor(R, RegExp);\n  flagsValue = R.flags;\n\n  if (flagsValue === undefined && R instanceof RegExp && !('flags' in RegExpPrototype)) {\n    flagsValue = getFlags.call(R);\n  }\n\n  flags = flagsValue === undefined ? '' : String(flagsValue);\n  matcher = new C(C === RegExp ? R.source : R, flags);\n  global = !!~flags.indexOf('g');\n  fullUnicode = !!~flags.indexOf('u');\n  matcher.lastIndex = toLength(R.lastIndex);\n  return new $RegExpStringIterator(matcher, S, global, fullUnicode);\n}; // `String.prototype.matchAll` method\n// https://github.com/tc39/proposal-string-matchall\n\n\n$({\n  target: 'String',\n  proto: true\n}, {\n  matchAll: function matchAll(regexp) {\n    var O = requireObjectCoercible(this);\n    var S, matcher, rx;\n\n    if (regexp != null) {\n      matcher = regexp[MATCH_ALL];\n      if (matcher === undefined && IS_PURE && classof(regexp) == 'RegExp') matcher = $matchAll;\n      if (matcher != null) return aFunction(matcher).call(regexp, O);\n    }\n\n    S = String(O);\n    rx = new RegExp(regexp, 'g');\n    return IS_PURE ? $matchAll.call(rx, S) : rx[MATCH_ALL](S);\n  }\n});\nIS_PURE || MATCH_ALL in RegExpPrototype || hide(RegExpPrototype, MATCH_ALL, $matchAll);","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/core-js/modules/es.string.match-all.js"],"names":["$","require","createIteratorConstructor","requireObjectCoercible","toLength","aFunction","anObject","classof","getFlags","hide","wellKnownSymbol","speciesConstructor","advanceStringIndex","InternalStateModule","IS_PURE","MATCH_ALL","REGEXP_STRING","REGEXP_STRING_ITERATOR","setInternalState","set","getInternalState","getterFor","RegExpPrototype","RegExp","prototype","regExpBuiltinExec","exec","regExpExec","R","S","result","call","TypeError","$RegExpStringIterator","RegExpStringIterator","regexp","string","global","fullUnicode","type","unicode","done","next","state","value","undefined","match","String","lastIndex","$matchAll","C","flagsValue","flags","matcher","source","indexOf","target","proto","matchAll","O","rx"],"mappings":"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","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof');\nvar getFlags = require('../internals/regexp-flags');\nvar hide = require('../internals/hide');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar InternalStateModule = require('../internals/internal-state');\nvar IS_PURE = require('../internals/is-pure');\n\nvar MATCH_ALL = wellKnownSymbol('matchAll');\nvar REGEXP_STRING = 'RegExp String';\nvar REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);\nvar RegExpPrototype = RegExp.prototype;\nvar regExpBuiltinExec = RegExpPrototype.exec;\n\nvar regExpExec = function (R, S) {\n  var exec = R.exec;\n  var result;\n  if (typeof exec == 'function') {\n    result = exec.call(R, S);\n    if (typeof result != 'object') throw TypeError('Incorrect exec result');\n    return result;\n  } return regExpBuiltinExec.call(R, S);\n};\n\n// eslint-disable-next-line max-len\nvar $RegExpStringIterator = createIteratorConstructor(function RegExpStringIterator(regexp, string, global, fullUnicode) {\n  setInternalState(this, {\n    type: REGEXP_STRING_ITERATOR,\n    regexp: regexp,\n    string: string,\n    global: global,\n    unicode: fullUnicode,\n    done: false\n  });\n}, REGEXP_STRING, function next() {\n  var state = getInternalState(this);\n  if (state.done) return { value: undefined, done: true };\n  var R = state.regexp;\n  var S = state.string;\n  var match = regExpExec(R, S);\n  if (match === null) return { value: undefined, done: state.done = true };\n  if (state.global) {\n    if (String(match[0]) == '') R.lastIndex = advanceStringIndex(S, toLength(R.lastIndex), state.unicode);\n    return { value: match, done: false };\n  }\n  state.done = true;\n  return { value: match, done: false };\n});\n\nvar $matchAll = function (string) {\n  var R = anObject(this);\n  var S = String(string);\n  var C, flagsValue, flags, matcher, global, fullUnicode;\n  C = speciesConstructor(R, RegExp);\n  flagsValue = R.flags;\n  if (flagsValue === undefined && R instanceof RegExp && !('flags' in RegExpPrototype)) {\n    flagsValue = getFlags.call(R);\n  }\n  flags = flagsValue === undefined ? '' : String(flagsValue);\n  matcher = new C(C === RegExp ? R.source : R, flags);\n  global = !!~flags.indexOf('g');\n  fullUnicode = !!~flags.indexOf('u');\n  matcher.lastIndex = toLength(R.lastIndex);\n  return new $RegExpStringIterator(matcher, S, global, fullUnicode);\n};\n\n// `String.prototype.matchAll` method\n// https://github.com/tc39/proposal-string-matchall\n$({ target: 'String', proto: true }, {\n  matchAll: function matchAll(regexp) {\n    var O = requireObjectCoercible(this);\n    var S, matcher, rx;\n    if (regexp != null) {\n      matcher = regexp[MATCH_ALL];\n      if (matcher === undefined && IS_PURE && classof(regexp) == 'RegExp') matcher = $matchAll;\n      if (matcher != null) return aFunction(matcher).call(regexp, O);\n    }\n    S = String(O);\n    rx = new RegExp(regexp, 'g');\n    return IS_PURE ? $matchAll.call(rx, S) : rx[MATCH_ALL](S);\n  }\n});\n\nIS_PURE || MATCH_ALL in RegExpPrototype || hide(RegExpPrototype, MATCH_ALL, $matchAll);\n"]},"metadata":{},"sourceType":"script"}