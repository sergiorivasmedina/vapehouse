{"ast":null,"code":"'use strict'; // TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\n\nrequire('../modules/es.string.iterator');\n\nvar $ = require('../internals/export');\n\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar USE_NATIVE_URL = require('../internals/native-url');\n\nvar global = require('../internals/global');\n\nvar defineProperties = require('../internals/object-define-properties');\n\nvar redefine = require('../internals/redefine');\n\nvar anInstance = require('../internals/an-instance');\n\nvar has = require('../internals/has');\n\nvar assign = require('../internals/object-assign');\n\nvar arrayFrom = require('../internals/array-from');\n\nvar codeAt = require('../internals/string-multibyte').codeAt;\n\nvar toASCII = require('../internals/punycode-to-ascii');\n\nvar setToStringTag = require('../internals/set-to-string-tag');\n\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+\\-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/; // eslint-disable-next-line no-control-regex\n\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/; // eslint-disable-next-line no-control-regex\n\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/; // eslint-disable-next-line no-control-regex\n\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g; // eslint-disable-next-line no-control-regex\n\nvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\nvar EOF;\n\nvar parseHost = function parseHost(url, input) {\n  var result, codePoints, index;\n\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result; // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function parseIPv4(input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n\n    numbers.push(number);\n  }\n\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n\n  ipv4 = numbers.pop();\n\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n\n  return ipv4;\n}; // eslint-disable-next-line max-statements\n\n\nvar parseIPv6 = function parseIPv6(input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function char() {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n\n  while (char()) {\n    if (pieceIndex == 8) return;\n\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n\n    value = length = 0;\n\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n\n      while (char()) {\n        ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;else return;\n        }\n\n        if (!DIGIT.test(char())) return;\n\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;else if (ipv4Piece == 0) return;else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n\n    address[pieceIndex++] = value;\n  }\n\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n\n  return address;\n};\n\nvar findLongestZeroSequence = function findLongestZeroSequence(ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n\n  return maxIndex;\n};\n\nvar serializeHost = function serializeHost(host) {\n  var result, index, compress, ignore0; // ipv4\n\n  if (typeof host == 'number') {\n    result = [];\n\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    }\n\n    return result.join('.'); // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n\n    return '[' + result + ']';\n  }\n\n  return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1,\n  '\"': 1,\n  '<': 1,\n  '>': 1,\n  '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1,\n  '?': 1,\n  '{': 1,\n  '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1,\n  ':': 1,\n  ';': 1,\n  '=': 1,\n  '@': 1,\n  '[': 1,\n  '\\\\': 1,\n  ']': 1,\n  '^': 1,\n  '|': 1\n});\n\nvar percentEncode = function percentEncode(char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function isSpecial(url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function includesCredentials(url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function cannotHaveUsernamePasswordPort(url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function isWindowsDriveLetter(string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0)) && ((second = string.charAt(1)) == ':' || !normalized && second == '|');\n};\n\nvar startsWithWindowsDriveLetter = function startsWithWindowsDriveLetter(string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (string.length == 2 || (third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#');\n};\n\nvar shortenURLsPath = function shortenURLsPath(url) {\n  var path = url.path;\n  var pathSize = path.length;\n\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function isSingleDot(segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function isDoubleDot(segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n}; // States:\n\n\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {}; // eslint-disable-next-line max-statements\n\nvar parseURL = function parseURL(url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (isSpecial(url) != has(specialSchemes, buffer) || buffer == 'file' && (includesCredentials(url) || url.port !== null) || url.scheme == 'file' && !url.host)) return;\n          url.scheme = buffer;\n\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n\n          buffer = '';\n\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n\n        break;\n\n      case NO_SCHEME:\n        if (!base || base.cannotBeABaseURL && char != '#') return INVALID_SCHEME;\n\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        }\n\n        break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || char == '\\\\' && isSpecial(url)) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        }\n\n        break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        }\n\n        break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        }\n\n        break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;else url.username += encodedCodePoints;\n          }\n\n          buffer = '';\n        } else if (char == EOF || char == '/' || char == '?' || char == '#' || char == '\\\\' && isSpecial(url)) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (char == EOF || char == '/' || char == '?' || char == '#' || char == '\\\\' && isSpecial(url)) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;else if (char == ']') seenBracket = false;\n          buffer += char;\n        }\n\n        break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (char == EOF || char == '/' || char == '?' || char == '#' || char == '\\\\' && isSpecial(url) || stateOverride) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = isSpecial(url) && port === specialSchemes[url.scheme] ? null : port;\n            buffer = '';\n          }\n\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        }\n        break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);else url.host = base.host;\n        }\n\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          }\n\n          continue;\n        } else buffer += char;\n\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        }\n\n        break;\n\n      case PATH:\n        if (char == EOF || char == '/' || char == '\\\\' && isSpecial(url) || !stateOverride && (char == '?' || char == '#')) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n\n            url.path.push(buffer);\n          }\n\n          buffer = '';\n\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        }\n\n        break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        }\n\n        break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';else if (char == '#') url.query += '%23';else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        }\n\n        break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n}; // `URL` constructor\n// https://url.spec.whatwg.org/#url-class\n\n\nvar URLConstructor = function URL(url\n/* , base */\n) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, {\n    type: 'URL'\n  });\n  var baseState, failure;\n\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function serializeURL() {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n\n  if (host !== null) {\n    output += '//';\n\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function getOrigin() {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function getProtocol() {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function getUsername() {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function getPassword() {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function getHost() {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? '' : port === null ? serializeHost(host) : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function getHostname() {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function getPort() {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function getPathname() {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function getSearch() {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function getSearchParams() {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function getHash() {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function accessorDescriptor(getter, setter) {\n  return {\n    get: getter,\n    set: setter,\n    configurable: true,\n    enumerable: true\n  };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n} // `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n\n\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, {\n  enumerable: true\n}); // `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\n\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, {\n  enumerable: true\n});\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL; // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars\n\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  }); // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars\n\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n$({\n  global: true,\n  forced: !USE_NATIVE_URL,\n  sham: !DESCRIPTORS\n}, {\n  URL: URLConstructor\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/core-js/modules/web.url.js"],"names":["require","$","DESCRIPTORS","USE_NATIVE_URL","global","defineProperties","redefine","anInstance","has","assign","arrayFrom","codeAt","toASCII","setToStringTag","URLSearchParamsModule","InternalStateModule","NativeURL","URL","URLSearchParams","getInternalSearchParamsState","getState","setInternalState","set","getInternalURLState","getterFor","floor","Math","pow","INVALID_AUTHORITY","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","EOF","parseHost","url","input","result","codePoints","index","charAt","length","parseIPv6","slice","host","isSpecial","test","percentEncode","C0ControlPercentEncodeSet","parseIPv4","parts","split","partsLength","numbers","part","radix","number","ipv4","pop","parseInt","push","address","pieceIndex","compress","pointer","value","numbersSeen","ipv4Piece","swaps","swap","char","findLongestZeroSequence","ipv6","maxIndex","maxLength","currStart","currLength","serializeHost","ignore0","unshift","join","toString","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","code","encodeURIComponent","specialSchemes","ftp","file","gopher","http","https","ws","wss","scheme","includesCredentials","username","password","cannotHaveUsernamePasswordPort","cannotBeABaseURL","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","shortenURLsPath","path","pathSize","isSingleDot","segment","toLowerCase","isDoubleDot","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","parseURL","stateOverride","base","state","buffer","seenAt","seenBracket","seenPasswordToken","bufferCodePoints","failure","port","query","fragment","replace","i","codePoint","encodedCodePoints","shift","URLConstructor","that","arguments","undefined","urlString","String","type","baseState","TypeError","searchParams","searchParamsState","updateSearchParams","updateURL","href","serializeURL","call","origin","getOrigin","protocol","getProtocol","getUsername","getPassword","getHost","hostname","getHostname","getPort","pathname","getPathname","search","getSearch","getSearchParams","hash","getHash","URLPrototype","prototype","output","error","accessorDescriptor","getter","setter","get","configurable","enumerable","toJSON","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","blob","apply","forced","sham"],"mappings":"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","sourcesContent":["'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar has = require('../internals/has');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/punycode-to-ascii');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+\\-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\n// eslint-disable-next-line no-control-regex\nvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n    numbers.push(number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = numbers.pop();\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function () {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (char()) {\n    if (pieceIndex == 8) return;\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (char()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!DIGIT.test(char())) return;\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    } return result.join('.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0))\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\n    string.length == 2 ||\n    ((third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || (char == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;\n          else if (char == ']') seenBracket = false;\n          buffer += char;\n        } break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += char;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          char == EOF || char == '/' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (char == '?' || char == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n            url.path.push(buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (char == '#') url.query += '%23';\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\n    else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  });\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n"]},"metadata":{},"sourceType":"script"}