{"ast":null,"code":"'use strict';\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar getMapIterator = require('../internals/get-map-iterator'); // `Map.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n\n\nrequire('../internals/export')({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: require('../internals/is-pure')\n}, {\n  reduce: function reduce(callbackfn\n  /* , initialValue */\n  ) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var accumulator, step, entry;\n    aFunction(callbackfn);\n    if (arguments.length > 1) accumulator = arguments[1];else {\n      step = iterator.next();\n      if (step.done) throw TypeError('Reduce of empty map with no initial value');\n      accumulator = step.value[1];\n    }\n\n    while (!(step = iterator.next()).done) {\n      entry = step.value;\n      accumulator = callbackfn(accumulator, entry[1], entry[0], map);\n    }\n\n    return accumulator;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.map.reduce.js"],"names":["anObject","require","aFunction","getMapIterator","target","proto","real","forced","reduce","callbackfn","map","iterator","accumulator","step","entry","arguments","length","next","done","TypeError","value"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,+BAAD,CAA5B,C,CAEA;AACA;;;AACAA,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEG,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAEN,OAAO,CAAC,sBAAD;AAAzD,CAA/B,EAAoH;AAClHO,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC;AAAW;AAA3B,IAAiD;AACvD,QAAIC,GAAG,GAAGV,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIW,QAAQ,GAAGR,cAAc,CAACO,GAAD,CAA7B;AACA,QAAIE,WAAJ,EAAiBC,IAAjB,EAAuBC,KAAvB;AACAZ,IAAAA,SAAS,CAACO,UAAD,CAAT;AACA,QAAIM,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0BJ,WAAW,GAAGG,SAAS,CAAC,CAAD,CAAvB,CAA1B,KACK;AACHF,MAAAA,IAAI,GAAGF,QAAQ,CAACM,IAAT,EAAP;AACA,UAAIJ,IAAI,CAACK,IAAT,EAAe,MAAMC,SAAS,CAAC,2CAAD,CAAf;AACfP,MAAAA,WAAW,GAAGC,IAAI,CAACO,KAAL,CAAW,CAAX,CAAd;AACD;;AACD,WAAO,CAAC,CAACP,IAAI,GAAGF,QAAQ,CAACM,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;AACrCJ,MAAAA,KAAK,GAAGD,IAAI,CAACO,KAAb;AACAR,MAAAA,WAAW,GAAGH,UAAU,CAACG,WAAD,EAAcE,KAAK,CAAC,CAAD,CAAnB,EAAwBA,KAAK,CAAC,CAAD,CAA7B,EAAkCJ,GAAlC,CAAxB;AACD;;AACD,WAAOE,WAAP;AACD;AAjBiH,CAApH","sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar getMapIterator = require('../internals/get-map-iterator');\n\n// `Map.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\nrequire('../internals/export')({ target: 'Map', proto: true, real: true, forced: require('../internals/is-pure') }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var accumulator, step, entry;\n    aFunction(callbackfn);\n    if (arguments.length > 1) accumulator = arguments[1];\n    else {\n      step = iterator.next();\n      if (step.done) throw TypeError('Reduce of empty map with no initial value');\n      accumulator = step.value[1];\n    }\n    while (!(step = iterator.next()).done) {\n      entry = step.value;\n      accumulator = callbackfn(accumulator, entry[1], entry[0], map);\n    }\n    return accumulator;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}