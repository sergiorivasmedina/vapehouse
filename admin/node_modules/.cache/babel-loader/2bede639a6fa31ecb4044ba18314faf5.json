{"ast":null,"code":"'use strict';\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function'); // `Set.prototype.update` method\n// https://github.com/tc39/proposal-collection-methods\n\n\nrequire('../internals/export')({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: require('../internals/is-pure')\n}, {\n  update: function update(key, callback\n  /* , thunk */\n  ) {\n    var map = anObject(this);\n    aFunction(callback);\n    var isPresentInMap = map.has(key);\n\n    if (!isPresentInMap && arguments.length < 3) {\n      throw TypeError('Updating absent value');\n    }\n\n    var value = isPresentInMap ? map.get(key) : aFunction(arguments[2])(key, map);\n    map.set(key, callback(value, key, map));\n    return map;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.map.update.js"],"names":["anObject","require","aFunction","target","proto","real","forced","update","key","callback","map","isPresentInMap","has","arguments","length","TypeError","value","get","set"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB,C,CAEA;AACA;;;AACAA,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEE,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAEL,OAAO,CAAC,sBAAD;AAAzD,CAA/B,EAAoH;AAClHM,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC;AAAS;AAA9B,IAA6C;AACnD,QAAIC,GAAG,GAAGV,QAAQ,CAAC,IAAD,CAAlB;AACAE,IAAAA,SAAS,CAACO,QAAD,CAAT;AACA,QAAIE,cAAc,GAAGD,GAAG,CAACE,GAAJ,CAAQJ,GAAR,CAArB;;AACA,QAAI,CAACG,cAAD,IAAmBE,SAAS,CAACC,MAAV,GAAmB,CAA1C,EAA6C;AAC3C,YAAMC,SAAS,CAAC,uBAAD,CAAf;AACD;;AACD,QAAIC,KAAK,GAAGL,cAAc,GAAGD,GAAG,CAACO,GAAJ,CAAQT,GAAR,CAAH,GAAkBN,SAAS,CAACW,SAAS,CAAC,CAAD,CAAV,CAAT,CAAwBL,GAAxB,EAA6BE,GAA7B,CAA5C;AACAA,IAAAA,GAAG,CAACQ,GAAJ,CAAQV,GAAR,EAAaC,QAAQ,CAACO,KAAD,EAAQR,GAAR,EAAaE,GAAb,CAArB;AACA,WAAOA,GAAP;AACD;AAXiH,CAApH","sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\n\n// `Set.prototype.update` method\n// https://github.com/tc39/proposal-collection-methods\nrequire('../internals/export')({ target: 'Map', proto: true, real: true, forced: require('../internals/is-pure') }, {\n  update: function update(key, callback /* , thunk */) {\n    var map = anObject(this);\n    aFunction(callback);\n    var isPresentInMap = map.has(key);\n    if (!isPresentInMap && arguments.length < 3) {\n      throw TypeError('Updating absent value');\n    }\n    var value = isPresentInMap ? map.get(key) : aFunction(arguments[2])(key, map);\n    map.set(key, callback(value, key, map));\n    return map;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}