{"ast":null,"code":"'use strict';\n\nvar iterate = require('../internals/iterate');\n\nvar aFunction = require('../internals/a-function'); // `Map.keyBy` method\n// https://github.com/tc39/proposal-collection-methods\n\n\nrequire('../internals/export')({\n  target: 'Map',\n  stat: true,\n  forced: require('../internals/is-pure')\n}, {\n  keyBy: function keyBy(iterable, keyDerivative) {\n    var newMap = new this();\n    aFunction(keyDerivative);\n    var setter = aFunction(newMap.set);\n    iterate(iterable, function (element) {\n      setter.call(newMap, keyDerivative(element), element);\n    });\n    return newMap;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.map.key-by.js"],"names":["iterate","require","aFunction","target","stat","forced","keyBy","iterable","keyDerivative","newMap","setter","set","element","call"],"mappings":"AAAA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB,C,CAEA;AACA;;;AACAA,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEE,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,IAAI,EAAE,IAAvB;AAA6BC,EAAAA,MAAM,EAAEJ,OAAO,CAAC,sBAAD;AAA5C,CAA/B,EAAuG;AACrGK,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,QAAf,EAAyBC,aAAzB,EAAwC;AAC7C,QAAIC,MAAM,GAAG,IAAI,IAAJ,EAAb;AACAP,IAAAA,SAAS,CAACM,aAAD,CAAT;AACA,QAAIE,MAAM,GAAGR,SAAS,CAACO,MAAM,CAACE,GAAR,CAAtB;AACAX,IAAAA,OAAO,CAACO,QAAD,EAAW,UAAUK,OAAV,EAAmB;AACnCF,MAAAA,MAAM,CAACG,IAAP,CAAYJ,MAAZ,EAAoBD,aAAa,CAACI,OAAD,CAAjC,EAA4CA,OAA5C;AACD,KAFM,CAAP;AAGA,WAAOH,MAAP;AACD;AAToG,CAAvG","sourcesContent":["'use strict';\nvar iterate = require('../internals/iterate');\nvar aFunction = require('../internals/a-function');\n\n// `Map.keyBy` method\n// https://github.com/tc39/proposal-collection-methods\nrequire('../internals/export')({ target: 'Map', stat: true, forced: require('../internals/is-pure') }, {\n  keyBy: function keyBy(iterable, keyDerivative) {\n    var newMap = new this();\n    aFunction(keyDerivative);\n    var setter = aFunction(newMap.set);\n    iterate(iterable, function (element) {\n      setter.call(newMap, keyDerivative(element), element);\n    });\n    return newMap;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}