{"ast":null,"code":"'use strict';\n\nvar flattenIntoArray = require('../internals/flatten-into-array');\n\nvar toObject = require('../internals/to-object');\n\nvar toLength = require('../internals/to-length');\n\nvar toInteger = require('../internals/to-integer');\n\nvar arraySpeciesCreate = require('../internals/array-species-create'); // `Array.prototype.flat` method\n// https://github.com/tc39/proposal-flatMap\n\n\nrequire('../internals/export')({\n  target: 'Array',\n  proto: true\n}, {\n  flat: function flat()\n  /* depthArg = 1 */\n  {\n    var depthArg = arguments[0];\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/es.array.flat.js"],"names":["flattenIntoArray","require","toObject","toLength","toInteger","arraySpeciesCreate","target","proto","flat","depthArg","arguments","O","sourceLen","length","A","undefined"],"mappings":"AAAA;;AACA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,iCAAD,CAA9B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,mCAAD,CAAhC,C,CAEA;AACA;;;AACAA,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEK,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAA/B,EAAiE;AAC/DC,EAAAA,IAAI,EAAE,SAASA,IAAT;AAAc;AAAoB;AACtC,QAAIC,QAAQ,GAAGC,SAAS,CAAC,CAAD,CAAxB;AACA,QAAIC,CAAC,GAAGT,QAAQ,CAAC,IAAD,CAAhB;AACA,QAAIU,SAAS,GAAGT,QAAQ,CAACQ,CAAC,CAACE,MAAH,CAAxB;AACA,QAAIC,CAAC,GAAGT,kBAAkB,CAACM,CAAD,EAAI,CAAJ,CAA1B;AACAG,IAAAA,CAAC,CAACD,MAAF,GAAWb,gBAAgB,CAACc,CAAD,EAAIH,CAAJ,EAAOA,CAAP,EAAUC,SAAV,EAAqB,CAArB,EAAwBH,QAAQ,KAAKM,SAAb,GAAyB,CAAzB,GAA6BX,SAAS,CAACK,QAAD,CAA9D,CAA3B;AACA,WAAOK,CAAP;AACD;AAR8D,CAAjE","sourcesContent":["'use strict';\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://github.com/tc39/proposal-flatMap\nrequire('../internals/export')({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments[0];\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}