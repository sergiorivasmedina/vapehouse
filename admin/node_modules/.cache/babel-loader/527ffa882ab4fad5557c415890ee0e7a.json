{"ast":null,"code":"'use strict';\n\nvar bind = require('../internals/bind-context');\n\nvar toObject = require('../internals/to-object');\n\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\n\nvar toLength = require('../internals/to-length');\n\nvar createProperty = require('../internals/create-property');\n\nvar getIteratorMethod = require('../internals/get-iterator-method'); // `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\n\n\nmodule.exports = function from(arrayLike\n/* , mapfn = undefined, thisArg = undefined */\n) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var index = 0;\n  var iteratorMethod = getIteratorMethod(O);\n  var length, result, step, iterator;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2); // if the target is not iterable or it's an array with the default iterator - use a simple case\n\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    result = new C();\n\n    for (; !(step = iterator.next()).done; index++) {\n      createProperty(result, index, mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n\n    for (; length > index; index++) {\n      createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n    }\n  }\n\n  result.length = index;\n  return result;\n};","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/internals/array-from.js"],"names":["bind","require","toObject","callWithSafeIterationClosing","isArrayIteratorMethod","toLength","createProperty","getIteratorMethod","module","exports","from","arrayLike","O","C","Array","argumentsLength","arguments","length","mapfn","undefined","mapping","index","iteratorMethod","result","step","iterator","call","next","done","value"],"mappings":"AAAA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,2BAAD,CAAlB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,4BAA4B,GAAGF,OAAO,CAAC,+CAAD,CAA1C;;AACA,IAAIG,qBAAqB,GAAGH,OAAO,CAAC,uCAAD,CAAnC;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIK,cAAc,GAAGL,OAAO,CAAC,8BAAD,CAA5B;;AACA,IAAIM,iBAAiB,GAAGN,OAAO,CAAC,kCAAD,CAA/B,C,CAEA;AACA;;;AACAO,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC;AAAU;AAAxB,EAAwE;AACvF,MAAIC,CAAC,GAAGV,QAAQ,CAACS,SAAD,CAAhB;AACA,MAAIE,CAAC,GAAG,OAAO,IAAP,IAAe,UAAf,GAA4B,IAA5B,GAAmCC,KAA3C;AACA,MAAIC,eAAe,GAAGC,SAAS,CAACC,MAAhC;AACA,MAAIC,KAAK,GAAGH,eAAe,GAAG,CAAlB,GAAsBC,SAAS,CAAC,CAAD,CAA/B,GAAqCG,SAAjD;AACA,MAAIC,OAAO,GAAGF,KAAK,KAAKC,SAAxB;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,cAAc,GAAGf,iBAAiB,CAACK,CAAD,CAAtC;AACA,MAAIK,MAAJ,EAAYM,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B;AACA,MAAIL,OAAJ,EAAaF,KAAK,GAAGlB,IAAI,CAACkB,KAAD,EAAQH,eAAe,GAAG,CAAlB,GAAsBC,SAAS,CAAC,CAAD,CAA/B,GAAqCG,SAA7C,EAAwD,CAAxD,CAAZ,CAT0E,CAUvF;;AACA,MAAIG,cAAc,IAAIH,SAAlB,IAA+B,EAAEN,CAAC,IAAIC,KAAL,IAAcV,qBAAqB,CAACkB,cAAD,CAArC,CAAnC,EAA2F;AACzFG,IAAAA,QAAQ,GAAGH,cAAc,CAACI,IAAf,CAAoBd,CAApB,CAAX;AACAW,IAAAA,MAAM,GAAG,IAAIV,CAAJ,EAAT;;AACA,WAAM,CAAC,CAACW,IAAI,GAAGC,QAAQ,CAACE,IAAT,EAAR,EAAyBC,IAAhC,EAAsCP,KAAK,EAA3C,EAA+C;AAC7Cf,MAAAA,cAAc,CAACiB,MAAD,EAASF,KAAT,EAAgBD,OAAO,GACjCjB,4BAA4B,CAACsB,QAAD,EAAWP,KAAX,EAAkB,CAACM,IAAI,CAACK,KAAN,EAAaR,KAAb,CAAlB,EAAuC,IAAvC,CADK,GAEjCG,IAAI,CAACK,KAFK,CAAd;AAID;AACF,GATD,MASO;AACLZ,IAAAA,MAAM,GAAGZ,QAAQ,CAACO,CAAC,CAACK,MAAH,CAAjB;AACAM,IAAAA,MAAM,GAAG,IAAIV,CAAJ,CAAMI,MAAN,CAAT;;AACA,WAAMA,MAAM,GAAGI,KAAf,EAAsBA,KAAK,EAA3B,EAA+B;AAC7Bf,MAAAA,cAAc,CAACiB,MAAD,EAASF,KAAT,EAAgBD,OAAO,GAAGF,KAAK,CAACN,CAAC,CAACS,KAAD,CAAF,EAAWA,KAAX,CAAR,GAA4BT,CAAC,CAACS,KAAD,CAApD,CAAd;AACD;AACF;;AACDE,EAAAA,MAAM,CAACN,MAAP,GAAgBI,KAAhB;AACA,SAAOE,MAAP;AACD,CA7BD","sourcesContent":["'use strict';\nvar bind = require('../internals/bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var index = 0;\n  var iteratorMethod = getIteratorMethod(O);\n  var length, result, step, iterator;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    result = new C();\n    for (;!(step = iterator.next()).done; index++) {\n      createProperty(result, index, mapping\n        ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true)\n        : step.value\n      );\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n    }\n  }\n  result.length = index;\n  return result;\n};\n"]},"metadata":{},"sourceType":"script"}