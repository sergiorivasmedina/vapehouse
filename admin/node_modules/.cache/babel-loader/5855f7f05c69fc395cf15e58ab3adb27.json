{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $map = require('../internals/array-iteration').map;\n\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support'); // `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: !arrayMethodHasSpeciesSupport('map')\n}, {\n  map: function map(callbackfn\n  /* , thisArg */\n  ) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/core-js/modules/es.array.map.js"],"names":["$","require","$map","map","arrayMethodHasSpeciesSupport","target","proto","forced","callbackfn","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,8BAAD,CAAP,CAAwCE,GAAnD;;AACA,IAAIC,4BAA4B,GAAGH,OAAO,CAAC,+CAAD,CAA1C,C,CAEA;AACA;AACA;;;AACAD,CAAC,CAAC;AAAEK,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAE,CAACH,4BAA4B,CAAC,KAAD;AAArE,CAAD,EAAiF;AAChFD,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaK;AAAW;AAAxB,IAAyC;AAC5C,WAAON,IAAI,CAAC,IAAD,EAAOM,UAAP,EAAmBC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAzD,CAAX;AACD;AAH+E,CAAjF,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('map') }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}