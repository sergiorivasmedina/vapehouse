{"ast":null,"code":"'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\n\n\nrequire('../internals/export')({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: require('../internals/is-pure')\n}, {\n  union: function union(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);\n    iterate(iterable, aFunction(newSet.add), newSet);\n    return newSet;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.set.union.js"],"names":["getBuiltIn","require","anObject","aFunction","speciesConstructor","iterate","target","proto","real","forced","union","iterable","set","newSet","add"],"mappings":"AAAA;;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAA,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEK,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAER,OAAO,CAAC,sBAAD;AAAzD,CAA/B,EAAoH;AAClHS,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,QAAf,EAAyB;AAC9B,QAAIC,GAAG,GAAGV,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIW,MAAM,GAAG,KAAKT,kBAAkB,CAACQ,GAAD,EAAMZ,UAAU,CAAC,KAAD,CAAhB,CAAvB,EAAiDY,GAAjD,CAAb;AACAP,IAAAA,OAAO,CAACM,QAAD,EAAWR,SAAS,CAACU,MAAM,CAACC,GAAR,CAApB,EAAkCD,MAAlC,CAAP;AACA,WAAOA,MAAP;AACD;AANiH,CAApH","sourcesContent":["'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar speciesConstructor = require('../internals/species-constructor');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\nrequire('../internals/export')({ target: 'Set', proto: true, real: true, forced: require('../internals/is-pure') }, {\n  union: function union(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);\n    iterate(iterable, aFunction(newSet.add), newSet);\n    return newSet;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}