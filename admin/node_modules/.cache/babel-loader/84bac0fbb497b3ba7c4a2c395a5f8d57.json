{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Target } from 'react-popper';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Button from './Button';\nvar propTypes = {\n  caret: PropTypes.bool,\n  color: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  'aria-haspopup': PropTypes.bool,\n  split: PropTypes.bool,\n  tag: tagPropType,\n  nav: PropTypes.bool\n};\nvar defaultProps = {\n  'aria-haspopup': true,\n  color: 'secondary'\n};\nvar contextTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n  inNavbar: PropTypes.bool.isRequired\n};\n\nvar DropdownToggle = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DropdownToggle, _React$Component);\n\n  function DropdownToggle(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = DropdownToggle.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.nav && !this.props.tag) {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.context.toggle(e);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        color = _this$props.color,\n        cssModule = _this$props.cssModule,\n        caret = _this$props.caret,\n        split = _this$props.split,\n        nav = _this$props.nav,\n        tag = _this$props.tag,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"color\", \"cssModule\", \"caret\", \"split\", \"nav\", \"tag\"]);\n\n    var ariaLabel = props['aria-label'] || 'Toggle Dropdown';\n    var classes = mapToCssModules(classNames(className, {\n      'dropdown-toggle': caret || split,\n      'dropdown-toggle-split': split,\n      'nav-link': nav\n    }), cssModule);\n    var children = props.children || React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, ariaLabel);\n    var Tag;\n\n    if (nav && !tag) {\n      Tag = 'a';\n      props.href = '#';\n    } else if (!tag) {\n      Tag = Button;\n      props.color = color;\n      props.cssModule = cssModule;\n    } else {\n      Tag = tag;\n    }\n\n    if (this.context.inNavbar) {\n      return React.createElement(Tag, _extends({}, props, {\n        className: classes,\n        onClick: this.onClick,\n        \"aria-expanded\": this.context.isOpen,\n        children: children\n      }));\n    }\n\n    return React.createElement(Target, _extends({}, props, {\n      className: classes,\n      component: Tag,\n      onClick: this.onClick,\n      \"aria-expanded\": this.context.isOpen,\n      children: children\n    }));\n  };\n\n  return DropdownToggle;\n}(React.Component);\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\nDropdownToggle.contextTypes = contextTypes;\nexport default DropdownToggle;","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/@coreui/react/node_modules/reactstrap/es/DropdownToggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","_inheritsLoose","_assertThisInitialized","React","PropTypes","classNames","Target","mapToCssModules","tagPropType","Button","propTypes","caret","bool","color","string","children","node","className","cssModule","object","disabled","onClick","func","split","tag","nav","defaultProps","contextTypes","isOpen","isRequired","toggle","inNavbar","DropdownToggle","_React$Component","props","_this","call","bind","_proto","prototype","e","preventDefault","context","render","_this$props","ariaLabel","classes","createElement","Tag","href","component","Component"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Target } from 'react-popper';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Button from './Button';\nvar propTypes = {\n  caret: PropTypes.bool,\n  color: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  'aria-haspopup': PropTypes.bool,\n  split: PropTypes.bool,\n  tag: tagPropType,\n  nav: PropTypes.bool\n};\nvar defaultProps = {\n  'aria-haspopup': true,\n  color: 'secondary'\n};\nvar contextTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n  inNavbar: PropTypes.bool.isRequired\n};\n\nvar DropdownToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DropdownToggle, _React$Component);\n\n  function DropdownToggle(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = DropdownToggle.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.nav && !this.props.tag) {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.context.toggle(e);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        color = _this$props.color,\n        cssModule = _this$props.cssModule,\n        caret = _this$props.caret,\n        split = _this$props.split,\n        nav = _this$props.nav,\n        tag = _this$props.tag,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"color\", \"cssModule\", \"caret\", \"split\", \"nav\", \"tag\"]);\n\n    var ariaLabel = props['aria-label'] || 'Toggle Dropdown';\n    var classes = mapToCssModules(classNames(className, {\n      'dropdown-toggle': caret || split,\n      'dropdown-toggle-split': split,\n      'nav-link': nav\n    }), cssModule);\n    var children = props.children || React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, ariaLabel);\n    var Tag;\n\n    if (nav && !tag) {\n      Tag = 'a';\n      props.href = '#';\n    } else if (!tag) {\n      Tag = Button;\n      props.color = color;\n      props.cssModule = cssModule;\n    } else {\n      Tag = tag;\n    }\n\n    if (this.context.inNavbar) {\n      return React.createElement(Tag, _extends({}, props, {\n        className: classes,\n        onClick: this.onClick,\n        \"aria-expanded\": this.context.isOpen,\n        children: children\n      }));\n    }\n\n    return React.createElement(Target, _extends({}, props, {\n      className: classes,\n      component: Tag,\n      onClick: this.onClick,\n      \"aria-expanded\": this.context.isOpen,\n      children: children\n    }));\n  };\n\n  return DropdownToggle;\n}(React.Component);\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\nDropdownToggle.contextTypes = contextTypes;\nexport default DropdownToggle;"]},"metadata":{},"sourceType":"module"}