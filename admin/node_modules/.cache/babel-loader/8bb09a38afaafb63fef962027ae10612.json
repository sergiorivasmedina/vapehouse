{"ast":null,"code":"'use strict';\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar iterate = require('../internals/iterate');\n\nvar BREAK = iterate.BREAK; // `Set.prototype.isSupersetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf\n\nrequire('../internals/export')({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: require('../internals/is-pure')\n}, {\n  isSupersetOf: function isSupersetOf(iterable) {\n    var set = anObject(this);\n    var hasCheck = aFunction(set.has);\n    return iterate(iterable, function (value) {\n      if (hasCheck.call(set, value) === false) return BREAK;\n    }) !== BREAK;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.set.is-superset-of.js"],"names":["anObject","require","aFunction","iterate","BREAK","target","proto","real","forced","isSupersetOf","iterable","set","hasCheck","has","value","call"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIG,KAAK,GAAGD,OAAO,CAACC,KAApB,C,CAEA;AACA;;AACAH,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEI,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAEP,OAAO,CAAC,sBAAD;AAAzD,CAA/B,EAAoH;AAClHQ,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAC5C,QAAIC,GAAG,GAAGX,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIY,QAAQ,GAAGV,SAAS,CAACS,GAAG,CAACE,GAAL,CAAxB;AACA,WAAOV,OAAO,CAACO,QAAD,EAAW,UAAUI,KAAV,EAAiB;AACxC,UAAIF,QAAQ,CAACG,IAAT,CAAcJ,GAAd,EAAmBG,KAAnB,MAA8B,KAAlC,EAAyC,OAAOV,KAAP;AAC1C,KAFa,CAAP,KAEAA,KAFP;AAGD;AAPiH,CAApH","sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar iterate = require('../internals/iterate');\nvar BREAK = iterate.BREAK;\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf\nrequire('../internals/export')({ target: 'Set', proto: true, real: true, forced: require('../internals/is-pure') }, {\n  isSupersetOf: function isSupersetOf(iterable) {\n    var set = anObject(this);\n    var hasCheck = aFunction(set.has);\n    return iterate(iterable, function (value) {\n      if (hasCheck.call(set, value) === false) return BREAK;\n    }) !== BREAK;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}