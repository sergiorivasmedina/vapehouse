{"ast":null,"code":"'use strict';\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar arrayFilter = require('../internals/array-methods')(2);\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor; // `%TypedArray%.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.filter\n\nArrayBufferViewCore.exportProto('filter', function filter(callbackfn\n/* , thisArg */\n) {\n  var list = arrayFilter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  var C = speciesConstructor(this, this.constructor);\n  var index = 0;\n  var length = list.length;\n  var result = new (aTypedArrayConstructor(C))(length);\n\n  while (length > index) {\n    result[index] = list[index++];\n  }\n\n  return result;\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/es.typed-array.filter.js"],"names":["speciesConstructor","require","ArrayBufferViewCore","arrayFilter","aTypedArray","aTypedArrayConstructor","exportProto","filter","callbackfn","list","arguments","length","undefined","C","constructor","index","result"],"mappings":"AAAA;;AACA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,4BAAD,CAAP,CAAsC,CAAtC,CAAlB;;AACA,IAAIG,WAAW,GAAGF,mBAAmB,CAACE,WAAtC;AACA,IAAIC,sBAAsB,GAAGH,mBAAmB,CAACG,sBAAjD,C,CAEA;AACA;;AACAH,mBAAmB,CAACI,WAApB,CAAgC,QAAhC,EAA0C,SAASC,MAAT,CAAgBC;AAAW;AAA3B,EAA4C;AACpF,MAAIC,IAAI,GAAGN,WAAW,CAACC,WAAW,CAAC,IAAD,CAAZ,EAAoBI,UAApB,EAAgCE,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAtE,CAAtB;AACA,MAAIC,CAAC,GAAGb,kBAAkB,CAAC,IAAD,EAAO,KAAKc,WAAZ,CAA1B;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIJ,MAAM,GAAGF,IAAI,CAACE,MAAlB;AACA,MAAIK,MAAM,GAAG,KAAKX,sBAAsB,CAACQ,CAAD,CAA3B,EAAgCF,MAAhC,CAAb;;AACA,SAAOA,MAAM,GAAGI,KAAhB;AAAuBC,IAAAA,MAAM,CAACD,KAAD,CAAN,GAAgBN,IAAI,CAACM,KAAK,EAAN,CAApB;AAAvB;;AACA,SAAOC,MAAP;AACD,CARD","sourcesContent":["'use strict';\nvar speciesConstructor = require('../internals/species-constructor');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar arrayFilter = require('../internals/array-methods')(2);\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\n\n// `%TypedArray%.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.filter\nArrayBufferViewCore.exportProto('filter', function filter(callbackfn /* , thisArg */) {\n  var list = arrayFilter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  var C = speciesConstructor(this, this.constructor);\n  var index = 0;\n  var length = list.length;\n  var result = new (aTypedArrayConstructor(C))(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n});\n"]},"metadata":{},"sourceType":"script"}