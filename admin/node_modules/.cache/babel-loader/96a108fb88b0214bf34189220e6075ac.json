{"ast":null,"code":"'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar bind = require('../internals/bind-context');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar getSetIterator = require('../internals/get-set-iterator'); // `Set.prototype.filter` method\n// https://github.com/tc39/proposal-collection-methods\n\n\nrequire('../internals/export')({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: require('../internals/is-pure')\n}, {\n  filter: function filter(callbackfn\n  /* , thisArg */\n  ) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var adder = aFunction(newSet.add);\n    var step, value;\n\n    while (!(step = iterator.next()).done) {\n      if (boundFunction(value = step.value, value, set)) adder.call(newSet, value);\n    }\n\n    return newSet;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.set.filter.js"],"names":["getBuiltIn","require","anObject","aFunction","bind","speciesConstructor","getSetIterator","target","proto","real","forced","filter","callbackfn","set","iterator","boundFunction","arguments","length","undefined","newSet","adder","add","step","value","next","done","call"],"mappings":"AAAA;;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,2BAAD,CAAlB;;AACA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAIK,cAAc,GAAGL,OAAO,CAAC,+BAAD,CAA5B,C,CAEA;AACA;;;AACAA,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEM,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAET,OAAO,CAAC,sBAAD;AAAzD,CAA/B,EAAoH;AAClHU,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC;AAAW;AAA3B,IAA4C;AAClD,QAAIC,GAAG,GAAGX,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIY,QAAQ,GAAGR,cAAc,CAACO,GAAD,CAA7B;AACA,QAAIE,aAAa,GAAGX,IAAI,CAACQ,UAAD,EAAaI,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAnD,EAA8D,CAA9D,CAAxB;AACA,QAAIC,MAAM,GAAG,KAAKd,kBAAkB,CAACQ,GAAD,EAAMb,UAAU,CAAC,KAAD,CAAhB,CAAvB,GAAb;AACA,QAAIoB,KAAK,GAAGjB,SAAS,CAACgB,MAAM,CAACE,GAAR,CAArB;AACA,QAAIC,IAAJ,EAAUC,KAAV;;AACA,WAAO,CAAC,CAACD,IAAI,GAAGR,QAAQ,CAACU,IAAT,EAAR,EAAyBC,IAAjC,EAAuC;AACrC,UAAIV,aAAa,CAACQ,KAAK,GAAGD,IAAI,CAACC,KAAd,EAAqBA,KAArB,EAA4BV,GAA5B,CAAjB,EAAmDO,KAAK,CAACM,IAAN,CAAWP,MAAX,EAAmBI,KAAnB;AACpD;;AACD,WAAOJ,MAAP;AACD;AAZiH,CAApH","sourcesContent":["'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar bind = require('../internals/bind-context');\nvar speciesConstructor = require('../internals/species-constructor');\nvar getSetIterator = require('../internals/get-set-iterator');\n\n// `Set.prototype.filter` method\n// https://github.com/tc39/proposal-collection-methods\nrequire('../internals/export')({ target: 'Set', proto: true, real: true, forced: require('../internals/is-pure') }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var adder = aFunction(newSet.add);\n    var step, value;\n    while (!(step = iterator.next()).done) {\n      if (boundFunction(value = step.value, value, set)) adder.call(newSet, value);\n    }\n    return newSet;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}