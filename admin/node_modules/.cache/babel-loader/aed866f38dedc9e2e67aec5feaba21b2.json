{"ast":null,"code":"'use strict';\n\nvar Int8Array = require('../internals/global').Int8Array;\n\nvar fails = require('../internals/fails');\n\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar arrayToLocaleString = [].toLocaleString;\nvar arraySlice = [].slice; // iOS Safari 6.x fails here\n\nvar TO_LOCALE_BUG = !!Int8Array && fails(function () {\n  arrayToLocaleString.call(new Int8Array(1));\n});\nvar FORCED = fails(function () {\n  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();\n}) || !fails(function () {\n  Int8Array.prototype.toLocaleString.call([1, 2]);\n}); // `%TypedArray%.prototype.toLocaleString` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tolocalestring\n\nArrayBufferViewCore.exportProto('toLocaleString', function toLocaleString() {\n  return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(aTypedArray(this)) : aTypedArray(this), arguments);\n}, FORCED);","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/es.typed-array.to-locale-string.js"],"names":["Int8Array","require","fails","ArrayBufferViewCore","aTypedArray","arrayToLocaleString","toLocaleString","arraySlice","slice","TO_LOCALE_BUG","call","FORCED","prototype","exportProto","apply","arguments"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,SAA/C;;AACA,IAAIE,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAIG,WAAW,GAAGD,mBAAmB,CAACC,WAAtC;AACA,IAAIC,mBAAmB,GAAG,GAAGC,cAA7B;AACA,IAAIC,UAAU,GAAG,GAAGC,KAApB,C,CAEA;;AACA,IAAIC,aAAa,GAAG,CAAC,CAACT,SAAF,IAAeE,KAAK,CAAC,YAAY;AACnDG,EAAAA,mBAAmB,CAACK,IAApB,CAAyB,IAAIV,SAAJ,CAAc,CAAd,CAAzB;AACD,CAFuC,CAAxC;AAGA,IAAIW,MAAM,GAAGT,KAAK,CAAC,YAAY;AAC7B,SAAO,CAAC,CAAD,EAAI,CAAJ,EAAOI,cAAP,MAA2B,IAAIN,SAAJ,CAAc,CAAC,CAAD,EAAI,CAAJ,CAAd,EAAsBM,cAAtB,EAAlC;AACD,CAFiB,CAAL,IAEP,CAACJ,KAAK,CAAC,YAAY;AACvBF,EAAAA,SAAS,CAACY,SAAV,CAAoBN,cAApB,CAAmCI,IAAnC,CAAwC,CAAC,CAAD,EAAI,CAAJ,CAAxC;AACD,CAFW,CAFZ,C,CAMA;AACA;;AACAP,mBAAmB,CAACU,WAApB,CAAgC,gBAAhC,EAAkD,SAASP,cAAT,GAA0B;AAC1E,SAAOD,mBAAmB,CAACS,KAApB,CAA0BL,aAAa,GAAGF,UAAU,CAACG,IAAX,CAAgBN,WAAW,CAAC,IAAD,CAA3B,CAAH,GAAwCA,WAAW,CAAC,IAAD,CAA1F,EAAkGW,SAAlG,CAAP;AACD,CAFD,EAEGJ,MAFH","sourcesContent":["'use strict';\nvar Int8Array = require('../internals/global').Int8Array;\nvar fails = require('../internals/fails');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar arrayToLocaleString = [].toLocaleString;\nvar arraySlice = [].slice;\n\n// iOS Safari 6.x fails here\nvar TO_LOCALE_BUG = !!Int8Array && fails(function () {\n  arrayToLocaleString.call(new Int8Array(1));\n});\nvar FORCED = fails(function () {\n  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();\n}) || !fails(function () {\n  Int8Array.prototype.toLocaleString.call([1, 2]);\n});\n\n// `%TypedArray%.prototype.toLocaleString` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tolocalestring\nArrayBufferViewCore.exportProto('toLocaleString', function toLocaleString() {\n  return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(aTypedArray(this)) : aTypedArray(this), arguments);\n}, FORCED);\n"]},"metadata":{},"sourceType":"script"}