{"ast":null,"code":"// `Number.isNaN` method\n// https://tc39.github.io/ecma262/#sec-number.isnan\nrequire('../internals/export')({\n  target: 'Number',\n  stat: true\n}, {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/es.number.is-nan.js"],"names":["require","target","stat","isNaN","number"],"mappings":"AAAA;AACA;AACAA,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEC,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,IAAI,EAAE;AAA1B,CAA/B,EAAiE;AAC/DC,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,MAAf,EAAuB;AAC5B;AACA,WAAOA,MAAM,IAAIA,MAAjB;AACD;AAJ8D,CAAjE","sourcesContent":["// `Number.isNaN` method\n// https://tc39.github.io/ecma262/#sec-number.isnan\nrequire('../internals/export')({ target: 'Number', stat: true }, {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}