{"ast":null,"code":"'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar getIterator = require('../internals/get-iterator');\n\nvar iterate = require('../internals/iterate');\n\nvar BREAK = iterate.BREAK; // `Set.prototype.isSubsetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\n\nrequire('../internals/export')({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: require('../internals/is-pure')\n}, {\n  isSubsetOf: function isSubsetOf(iterable) {\n    var iterator = getIterator(this);\n    var otherSet = anObject(iterable);\n    var hasCheck = otherSet.has;\n\n    if (typeof hasCheck != 'function') {\n      otherSet = new (getBuiltIn('Set'))(iterable);\n      hasCheck = aFunction(otherSet.has);\n    }\n\n    return iterate(iterator, function (value) {\n      if (hasCheck.call(otherSet, value) === false) return BREAK;\n    }, undefined, false, true) !== BREAK;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/esnext.set.is-subset-of.js"],"names":["getBuiltIn","require","anObject","aFunction","getIterator","iterate","BREAK","target","proto","real","forced","isSubsetOf","iterable","iterator","otherSet","hasCheck","has","value","call","undefined"],"mappings":"AAAA;;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,2BAAD,CAAzB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIK,KAAK,GAAGD,OAAO,CAACC,KAApB,C,CAEA;AACA;;AACAL,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEM,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAET,OAAO,CAAC,sBAAD;AAAzD,CAA/B,EAAoH;AAClHU,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AACxC,QAAIC,QAAQ,GAAGT,WAAW,CAAC,IAAD,CAA1B;AACA,QAAIU,QAAQ,GAAGZ,QAAQ,CAACU,QAAD,CAAvB;AACA,QAAIG,QAAQ,GAAGD,QAAQ,CAACE,GAAxB;;AACA,QAAI,OAAOD,QAAP,IAAmB,UAAvB,EAAmC;AACjCD,MAAAA,QAAQ,GAAG,KAAKd,UAAU,CAAC,KAAD,CAAf,EAAwBY,QAAxB,CAAX;AACAG,MAAAA,QAAQ,GAAGZ,SAAS,CAACW,QAAQ,CAACE,GAAV,CAApB;AACD;;AACD,WAAOX,OAAO,CAACQ,QAAD,EAAW,UAAUI,KAAV,EAAiB;AACxC,UAAIF,QAAQ,CAACG,IAAT,CAAcJ,QAAd,EAAwBG,KAAxB,MAAmC,KAAvC,EAA8C,OAAOX,KAAP;AAC/C,KAFa,EAEXa,SAFW,EAEA,KAFA,EAEO,IAFP,CAAP,KAEwBb,KAF/B;AAGD;AAZiH,CAApH","sourcesContent":["'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar getIterator = require('../internals/get-iterator');\nvar iterate = require('../internals/iterate');\nvar BREAK = iterate.BREAK;\n\n// `Set.prototype.isSubsetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\nrequire('../internals/export')({ target: 'Set', proto: true, real: true, forced: require('../internals/is-pure') }, {\n  isSubsetOf: function isSubsetOf(iterable) {\n    var iterator = getIterator(this);\n    var otherSet = anObject(iterable);\n    var hasCheck = otherSet.has;\n    if (typeof hasCheck != 'function') {\n      otherSet = new (getBuiltIn('Set'))(iterable);\n      hasCheck = aFunction(otherSet.has);\n    }\n    return iterate(iterator, function (value) {\n      if (hasCheck.call(otherSet, value) === false) return BREAK;\n    }, undefined, false, true) !== BREAK;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}