{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar getSetIterator = require('../internals/get-set-iterator');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  reduce: function reduce(callbackfn\n  /* , initialValue */\n  ) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var accumulator, step;\n    aFunction(callbackfn);\n    if (arguments.length > 1) accumulator = arguments[1];else {\n      step = iterator.next();\n      if (step.done) throw TypeError('Reduce of empty set with no initial value');\n      accumulator = step.value;\n    }\n    iterate(iterator, function (value) {\n      accumulator = callbackfn(accumulator, value, value, set);\n    }, undefined, false, true);\n    return accumulator;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/core-js/modules/esnext.set.reduce.js"],"names":["$","require","IS_PURE","anObject","aFunction","getSetIterator","iterate","target","proto","real","forced","reduce","callbackfn","set","iterator","accumulator","step","arguments","length","next","done","TypeError","value","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,cAAc,GAAGJ,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEO,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAER;AAAlD,CAAD,EAA8D;AAC7DS,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC;AAAW;AAA3B,IAAiD;AACvD,QAAIC,GAAG,GAAGV,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIW,QAAQ,GAAGT,cAAc,CAACQ,GAAD,CAA7B;AACA,QAAIE,WAAJ,EAAiBC,IAAjB;AACAZ,IAAAA,SAAS,CAACQ,UAAD,CAAT;AACA,QAAIK,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0BH,WAAW,GAAGE,SAAS,CAAC,CAAD,CAAvB,CAA1B,KACK;AACHD,MAAAA,IAAI,GAAGF,QAAQ,CAACK,IAAT,EAAP;AACA,UAAIH,IAAI,CAACI,IAAT,EAAe,MAAMC,SAAS,CAAC,2CAAD,CAAf;AACfN,MAAAA,WAAW,GAAGC,IAAI,CAACM,KAAnB;AACD;AACDhB,IAAAA,OAAO,CAACQ,QAAD,EAAW,UAAUQ,KAAV,EAAiB;AACjCP,MAAAA,WAAW,GAAGH,UAAU,CAACG,WAAD,EAAcO,KAAd,EAAqBA,KAArB,EAA4BT,GAA5B,CAAxB;AACD,KAFM,EAEJU,SAFI,EAEO,KAFP,EAEc,IAFd,CAAP;AAGA,WAAOR,WAAP;AACD;AAhB4D,CAA9D,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var accumulator, step;\n    aFunction(callbackfn);\n    if (arguments.length > 1) accumulator = arguments[1];\n    else {\n      step = iterator.next();\n      if (step.done) throw TypeError('Reduce of empty set with no initial value');\n      accumulator = step.value;\n    }\n    iterate(iterator, function (value) {\n      accumulator = callbackfn(accumulator, value, value, set);\n    }, undefined, false, true);\n    return accumulator;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}