{"ast":null,"code":"'use strict';\n\nvar toLength = require('../internals/to-length');\n\nvar validateArguments = require('../internals/validate-string-method-arguments');\n\nvar ENDS_WITH = 'endsWith';\nvar nativeEndsWith = ''[ENDS_WITH];\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = require('../internals/correct-is-regexp-logic')(ENDS_WITH); // `String.prototype.endsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\n\n\nrequire('../internals/export')({\n  target: 'String',\n  proto: true,\n  forced: !CORRECT_IS_REGEXP_LOGIC\n}, {\n  endsWith: function endsWith(searchString\n  /* , endPosition = @length */\n  ) {\n    var that = validateArguments(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return nativeEndsWith ? nativeEndsWith.call(that, search, end) : that.slice(end - search.length, end) === search;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/es.string.ends-with.js"],"names":["toLength","require","validateArguments","ENDS_WITH","nativeEndsWith","min","Math","CORRECT_IS_REGEXP_LOGIC","target","proto","forced","endsWith","searchString","that","endPosition","arguments","length","undefined","len","end","search","String","call","slice"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,+CAAD,CAA/B;;AACA,IAAIE,SAAS,GAAG,UAAhB;AACA,IAAIC,cAAc,GAAG,GAAGD,SAAH,CAArB;AACA,IAAIE,GAAG,GAAGC,IAAI,CAACD,GAAf;;AAEA,IAAIE,uBAAuB,GAAGN,OAAO,CAAC,sCAAD,CAAP,CAAgDE,SAAhD,CAA9B,C,CAEA;AACA;;;AACAF,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEO,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,KAAK,EAAE,IAA3B;AAAiCC,EAAAA,MAAM,EAAE,CAACH;AAA1C,CAA/B,EAAoG;AAClGI,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC;AAAa;AAA/B,IAA8D;AACtE,QAAIC,IAAI,GAAGX,iBAAiB,CAAC,IAAD,EAAOU,YAAP,EAAqBT,SAArB,CAA5B;AACA,QAAIW,WAAW,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAxD;AACA,QAAIC,GAAG,GAAGlB,QAAQ,CAACa,IAAI,CAACG,MAAN,CAAlB;AACA,QAAIG,GAAG,GAAGL,WAAW,KAAKG,SAAhB,GAA4BC,GAA5B,GAAkCb,GAAG,CAACL,QAAQ,CAACc,WAAD,CAAT,EAAwBI,GAAxB,CAA/C;AACA,QAAIE,MAAM,GAAGC,MAAM,CAACT,YAAD,CAAnB;AACA,WAAOR,cAAc,GACjBA,cAAc,CAACkB,IAAf,CAAoBT,IAApB,EAA0BO,MAA1B,EAAkCD,GAAlC,CADiB,GAEjBN,IAAI,CAACU,KAAL,CAAWJ,GAAG,GAAGC,MAAM,CAACJ,MAAxB,EAAgCG,GAAhC,MAAyCC,MAF7C;AAGD;AAViG,CAApG","sourcesContent":["'use strict';\nvar toLength = require('../internals/to-length');\nvar validateArguments = require('../internals/validate-string-method-arguments');\nvar ENDS_WITH = 'endsWith';\nvar nativeEndsWith = ''[ENDS_WITH];\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = require('../internals/correct-is-regexp-logic')(ENDS_WITH);\n\n// `String.prototype.endsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\nrequire('../internals/export')({ target: 'String', proto: true, forced: !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = validateArguments(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return nativeEndsWith\n      ? nativeEndsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}