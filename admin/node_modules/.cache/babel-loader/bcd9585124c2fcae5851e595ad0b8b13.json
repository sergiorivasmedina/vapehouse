{"ast":null,"code":"'use strict';\n\nvar validateArguments = require('../internals/validate-string-method-arguments');\n\nvar INCLUDES = 'includes';\n\nvar CORRECT_IS_REGEXP_LOGIC = require('../internals/correct-is-regexp-logic')(INCLUDES); // `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n\n\nrequire('../internals/export')({\n  target: 'String',\n  proto: true,\n  forced: !CORRECT_IS_REGEXP_LOGIC\n}, {\n  includes: function includes(searchString\n  /* , position = 0 */\n  ) {\n    return !!~validateArguments(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/es.string.includes.js"],"names":["validateArguments","require","INCLUDES","CORRECT_IS_REGEXP_LOGIC","target","proto","forced","includes","searchString","indexOf","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,+CAAD,CAA/B;;AACA,IAAIC,QAAQ,GAAG,UAAf;;AAEA,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,sCAAD,CAAP,CAAgDC,QAAhD,CAA9B,C,CAEA;AACA;;;AACAD,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEG,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,KAAK,EAAE,IAA3B;AAAiCC,EAAAA,MAAM,EAAE,CAACH;AAA1C,CAA/B,EAAoG;AAClGI,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC;AAAa;AAA/B,IAAqD;AAC7D,WAAO,CAAC,CAAC,CAACR,iBAAiB,CAAC,IAAD,EAAOQ,YAAP,EAAqBN,QAArB,CAAjB,CACPO,OADO,CACCD,YADD,EACeE,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SADrD,CAAV;AAED;AAJiG,CAApG","sourcesContent":["'use strict';\nvar validateArguments = require('../internals/validate-string-method-arguments');\nvar INCLUDES = 'includes';\n\nvar CORRECT_IS_REGEXP_LOGIC = require('../internals/correct-is-regexp-logic')(INCLUDES);\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\nrequire('../internals/export')({ target: 'String', proto: true, forced: !CORRECT_IS_REGEXP_LOGIC }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~validateArguments(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}