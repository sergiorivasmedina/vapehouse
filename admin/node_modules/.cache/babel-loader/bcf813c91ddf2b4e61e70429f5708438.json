{"ast":null,"code":"'use strict';\n\nvar toObject = require('../internals/to-object');\n\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar toLength = require('../internals/to-length'); // `Array.prototype.copyWithin` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin\n\n\nmodule.exports = [].copyWithin || function copyWithin(target\n/* = 0 */\n, start\n/* = 0, end = @length */\n) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];else delete O[to];\n    to += inc;\n    from += inc;\n  }\n\n  return O;\n};","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/internals/array-copy-within.js"],"names":["toObject","require","toAbsoluteIndex","toLength","module","exports","copyWithin","target","start","O","len","length","to","from","end","arguments","undefined","count","Math","min","inc"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,gCAAD,CAA7B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB,C,CAEA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,GAAGC,UAAH,IAAiB,SAASA,UAAT,CAAoBC;AAAO;AAA3B,EAAsCC;AAAM;AAA5C,EAAsE;AACtG,MAAIC,CAAC,GAAGT,QAAQ,CAAC,IAAD,CAAhB;AACA,MAAIU,GAAG,GAAGP,QAAQ,CAACM,CAAC,CAACE,MAAH,CAAlB;AACA,MAAIC,EAAE,GAAGV,eAAe,CAACK,MAAD,EAASG,GAAT,CAAxB;AACA,MAAIG,IAAI,GAAGX,eAAe,CAACM,KAAD,EAAQE,GAAR,CAA1B;AACA,MAAII,GAAG,GAAGC,SAAS,CAACJ,MAAV,GAAmB,CAAnB,GAAuBI,SAAS,CAAC,CAAD,CAAhC,GAAsCC,SAAhD;AACA,MAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACL,GAAG,KAAKE,SAAR,GAAoBN,GAApB,GAA0BR,eAAe,CAACY,GAAD,EAAMJ,GAAN,CAA1C,IAAwDG,IAAjE,EAAuEH,GAAG,GAAGE,EAA7E,CAAZ;AACA,MAAIQ,GAAG,GAAG,CAAV;;AACA,MAAIP,IAAI,GAAGD,EAAP,IAAaA,EAAE,GAAGC,IAAI,GAAGI,KAA7B,EAAoC;AAClCG,IAAAA,GAAG,GAAG,CAAC,CAAP;AACAP,IAAAA,IAAI,IAAII,KAAK,GAAG,CAAhB;AACAL,IAAAA,EAAE,IAAIK,KAAK,GAAG,CAAd;AACD;;AACD,SAAOA,KAAK,KAAK,CAAjB,EAAoB;AAClB,QAAIJ,IAAI,IAAIJ,CAAZ,EAAeA,CAAC,CAACG,EAAD,CAAD,GAAQH,CAAC,CAACI,IAAD,CAAT,CAAf,KACK,OAAOJ,CAAC,CAACG,EAAD,CAAR;AACLA,IAAAA,EAAE,IAAIQ,GAAN;AACAP,IAAAA,IAAI,IAAIO,GAAR;AACD;;AAAC,SAAOX,CAAP;AACH,CAnBD","sourcesContent":["'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.copyWithin` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n"]},"metadata":{},"sourceType":"script"}