{"ast":null,"code":"'use strict';\n\nvar regexpFlags = require('./regexp-flags');\n\nvar nativeExec = RegExp.prototype.exec; // This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\n\nvar nativeReplace = String.prototype.replace;\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n}(); // nonparticipating capturing group, copied from es5-shim's String#split patch.\n\n\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/core-js/internals/regexp-exec.js"],"names":["regexpFlags","require","nativeExec","RegExp","prototype","exec","nativeReplace","String","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","call","lastIndex","NPCG_INCLUDED","undefined","PATCH","str","re","reCopy","match","i","source","global","index","length","arguments","module","exports"],"mappings":"AAAA;;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAIC,UAAU,GAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAlC,C,CACA;AACA;AACA;;AACA,IAAIC,aAAa,GAAGC,MAAM,CAACH,SAAP,CAAiBI,OAArC;AAEA,IAAIC,WAAW,GAAGP,UAAlB;;AAEA,IAAIQ,wBAAwB,GAAI,YAAY;AAC1C,MAAIC,GAAG,GAAG,GAAV;AACA,MAAIC,GAAG,GAAG,KAAV;AACAV,EAAAA,UAAU,CAACW,IAAX,CAAgBF,GAAhB,EAAqB,GAArB;AACAT,EAAAA,UAAU,CAACW,IAAX,CAAgBD,GAAhB,EAAqB,GAArB;AACA,SAAOD,GAAG,CAACG,SAAJ,KAAkB,CAAlB,IAAuBF,GAAG,CAACE,SAAJ,KAAkB,CAAhD;AACD,CAN8B,EAA/B,C,CAQA;;;AACA,IAAIC,aAAa,GAAG,OAAOV,IAAP,CAAY,EAAZ,EAAgB,CAAhB,MAAuBW,SAA3C;AAEA,IAAIC,KAAK,GAAGP,wBAAwB,IAAIK,aAAxC;;AAEA,IAAIE,KAAJ,EAAW;AACTR,EAAAA,WAAW,GAAG,SAASJ,IAAT,CAAca,GAAd,EAAmB;AAC/B,QAAIC,EAAE,GAAG,IAAT;AACA,QAAIL,SAAJ,EAAeM,MAAf,EAAuBC,KAAvB,EAA8BC,CAA9B;;AAEA,QAAIP,aAAJ,EAAmB;AACjBK,MAAAA,MAAM,GAAG,IAAIjB,MAAJ,CAAW,MAAMgB,EAAE,CAACI,MAAT,GAAkB,UAA7B,EAAyCvB,WAAW,CAACa,IAAZ,CAAiBM,EAAjB,CAAzC,CAAT;AACD;;AACD,QAAIT,wBAAJ,EAA8BI,SAAS,GAAGK,EAAE,CAACL,SAAf;AAE9BO,IAAAA,KAAK,GAAGnB,UAAU,CAACW,IAAX,CAAgBM,EAAhB,EAAoBD,GAApB,CAAR;;AAEA,QAAIR,wBAAwB,IAAIW,KAAhC,EAAuC;AACrCF,MAAAA,EAAE,CAACL,SAAH,GAAeK,EAAE,CAACK,MAAH,GAAYH,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAAC,CAAD,CAAL,CAASK,MAAnC,GAA4CZ,SAA3D;AACD;;AACD,QAAIC,aAAa,IAAIM,KAAjB,IAA0BA,KAAK,CAACK,MAAN,GAAe,CAA7C,EAAgD;AAC9C;AACA;AACApB,MAAAA,aAAa,CAACO,IAAd,CAAmBQ,KAAK,CAAC,CAAD,CAAxB,EAA6BD,MAA7B,EAAqC,YAAY;AAC/C,aAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGK,SAAS,CAACD,MAAV,GAAmB,CAAnC,EAAsCJ,CAAC,EAAvC,EAA2C;AACzC,cAAIK,SAAS,CAACL,CAAD,CAAT,KAAiBN,SAArB,EAAgCK,KAAK,CAACC,CAAD,CAAL,GAAWN,SAAX;AACjC;AACF,OAJD;AAKD;;AAED,WAAOK,KAAP;AACD,GAzBD;AA0BD;;AAEDO,MAAM,CAACC,OAAP,GAAiBpB,WAAjB","sourcesContent":["'use strict';\nvar regexpFlags = require('./regexp-flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n"]},"metadata":{},"sourceType":"script"}