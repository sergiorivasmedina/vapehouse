{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $findIndex = require('../internals/array-iteration').findIndex;\n\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true; // Shouldn't skip holes\n\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () {\n  SKIPS_HOLES = false;\n}); // `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: SKIPS_HOLES\n}, {\n  findIndex: function findIndex(callbackfn\n  /* , that = undefined */\n  ) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n}); // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\n\naddToUnscopables(FIND_INDEX);","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/core-js/modules/es.array.find-index.js"],"names":["$","require","$findIndex","findIndex","addToUnscopables","FIND_INDEX","SKIPS_HOLES","Array","target","proto","forced","callbackfn","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,8BAAD,CAAP,CAAwCE,SAAzD;;AACA,IAAIC,gBAAgB,GAAGH,OAAO,CAAC,iCAAD,CAA9B;;AAEA,IAAII,UAAU,GAAG,WAAjB;AACA,IAAIC,WAAW,GAAG,IAAlB,C,CAEA;;AACA,IAAID,UAAU,IAAI,EAAlB,EAAsBE,KAAK,CAAC,CAAD,CAAL,CAASF,UAAT,EAAqB,YAAY;AAAEC,EAAAA,WAAW,GAAG,KAAd;AAAsB,CAAzD,E,CAEtB;AACA;;AACAN,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAEJ;AAAxC,CAAD,EAAwD;AACvDH,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBQ;AAAW;AAA9B,IAAwD;AACjE,WAAOT,UAAU,CAAC,IAAD,EAAOS,UAAP,EAAmBC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAzD,CAAjB;AACD;AAHsD,CAAxD,CAAD,C,CAMA;;AACAV,gBAAgB,CAACC,UAAD,CAAhB","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n"]},"metadata":{},"sourceType":"script"}