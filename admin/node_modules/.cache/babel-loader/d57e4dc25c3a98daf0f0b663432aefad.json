{"ast":null,"code":"'use strict';\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\n\nvar internalTypedArrayMap = require('../internals/array-methods')(1, function (O, length) {\n  return new (aTypedArrayConstructor(speciesConstructor(O, O.constructor)))(length);\n}); // `%TypedArray%.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map\n\n\nArrayBufferViewCore.exportProto('map', function map(mapfn\n/* , thisArg */\n) {\n  return internalTypedArrayMap(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/es.typed-array.map.js"],"names":["speciesConstructor","require","ArrayBufferViewCore","aTypedArray","aTypedArrayConstructor","internalTypedArrayMap","O","length","constructor","exportProto","map","mapfn","arguments","undefined"],"mappings":"AAAA;;AACA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAIE,WAAW,GAAGD,mBAAmB,CAACC,WAAtC;AACA,IAAIC,sBAAsB,GAAGF,mBAAmB,CAACE,sBAAjD;;AAEA,IAAIC,qBAAqB,GAAGJ,OAAO,CAAC,4BAAD,CAAP,CAAsC,CAAtC,EAAyC,UAAUK,CAAV,EAAaC,MAAb,EAAqB;AACxF,SAAO,KAAKH,sBAAsB,CAACJ,kBAAkB,CAACM,CAAD,EAAIA,CAAC,CAACE,WAAN,CAAnB,CAA3B,EAAmED,MAAnE,CAAP;AACD,CAF2B,CAA5B,C,CAIA;AACA;;;AACAL,mBAAmB,CAACO,WAApB,CAAgC,KAAhC,EAAuC,SAASC,GAAT,CAAaC;AAAM;AAAnB,EAAoC;AACzE,SAAON,qBAAqB,CAACF,WAAW,CAAC,IAAD,CAAZ,EAAoBQ,KAApB,EAA2BC,SAAS,CAACL,MAAV,GAAmB,CAAnB,GAAuBK,SAAS,CAAC,CAAD,CAAhC,GAAsCC,SAAjE,CAA5B;AACD,CAFD","sourcesContent":["'use strict';\nvar speciesConstructor = require('../internals/species-constructor');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\n\nvar internalTypedArrayMap = require('../internals/array-methods')(1, function (O, length) {\n  return new (aTypedArrayConstructor(speciesConstructor(O, O.constructor)))(length);\n});\n\n// `%TypedArray%.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map\nArrayBufferViewCore.exportProto('map', function map(mapfn /* , thisArg */) {\n  return internalTypedArrayMap(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n});\n"]},"metadata":{},"sourceType":"script"}