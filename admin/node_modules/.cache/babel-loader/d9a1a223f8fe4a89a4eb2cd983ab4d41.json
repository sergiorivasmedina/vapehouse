{"ast":null,"code":"'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar promiseResolve = require('../internals/promise-resolve'); // `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\n\n\nrequire('../internals/export')({\n  target: 'Promise',\n  proto: true,\n  real: true\n}, {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/es.promise.finally.js"],"names":["getBuiltIn","require","speciesConstructor","promiseResolve","target","proto","real","onFinally","C","isFunction","then","x","e"],"mappings":"AAAA;;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,8BAAD,CAA5B,C,CAEA;AACA;;;AACAA,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEG,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,KAAK,EAAE,IAA5B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAA/B,EAA+E;AAC7E,aAAW,kBAAUC,SAAV,EAAqB;AAC9B,QAAIC,CAAC,GAAGN,kBAAkB,CAAC,IAAD,EAAOF,UAAU,CAAC,SAAD,CAAjB,CAA1B;AACA,QAAIS,UAAU,GAAG,OAAOF,SAAP,IAAoB,UAArC;AACA,WAAO,KAAKG,IAAL,CACLD,UAAU,GAAG,UAAUE,CAAV,EAAa;AACxB,aAAOR,cAAc,CAACK,CAAD,EAAID,SAAS,EAAb,CAAd,CAA+BG,IAA/B,CAAoC,YAAY;AAAE,eAAOC,CAAP;AAAW,OAA7D,CAAP;AACD,KAFS,GAENJ,SAHC,EAILE,UAAU,GAAG,UAAUG,CAAV,EAAa;AACxB,aAAOT,cAAc,CAACK,CAAD,EAAID,SAAS,EAAb,CAAd,CAA+BG,IAA/B,CAAoC,YAAY;AAAE,cAAME,CAAN;AAAU,OAA5D,CAAP;AACD,KAFS,GAENL,SANC,CAAP;AAQD;AAZ4E,CAA/E","sourcesContent":["'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\n\n// `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\nrequire('../internals/export')({ target: 'Promise', proto: true, real: true }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n"]},"metadata":{},"sourceType":"script"}