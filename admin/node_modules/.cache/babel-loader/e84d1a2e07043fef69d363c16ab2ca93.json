{"ast":null,"code":"var bind = require('../internals/bind-context');\n\nvar IndexedObject = require('../internals/indexed-object');\n\nvar toObject = require('../internals/to-object');\n\nvar toLength = require('../internals/to-length');\n\nvar arraySpeciesCreate = require('../internals/array-species-create'); // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\n// 0 -> Array#forEach\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n// 1 -> Array#map\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// 2 -> Array#filter\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// 3 -> Array#some\n// https://tc39.github.io/ecma262/#sec-array.prototype.some\n// 4 -> Array#every\n// https://tc39.github.io/ecma262/#sec-array.prototype.every\n// 5 -> Array#find\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n// 6 -> Array#findIndex\n// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n\n\nmodule.exports = function (TYPE, specificCreate) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = specificCreate || arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        value = self[index];\n        result = boundFunction(value, index, O);\n\n        if (TYPE) {\n          if (IS_MAP) target[index] = result; // map\n          else if (result) switch (TYPE) {\n              case 3:\n                return true;\n              // some\n\n              case 5:\n                return value;\n              // find\n\n              case 6:\n                return index;\n              // findIndex\n\n              case 2:\n                target.push(value);\n              // filter\n            } else if (IS_EVERY) return false; // every\n        }\n      }\n    }\n\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/internals/array-methods.js"],"names":["bind","require","IndexedObject","toObject","toLength","arraySpeciesCreate","module","exports","TYPE","specificCreate","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","that","O","self","boundFunction","length","index","target","undefined","value","result","push"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,2BAAD,CAAlB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,mCAAD,CAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAK,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,cAAhB,EAAgC;AAC/C,MAAIC,MAAM,GAAGF,IAAI,IAAI,CAArB;AACA,MAAIG,SAAS,GAAGH,IAAI,IAAI,CAAxB;AACA,MAAII,OAAO,GAAGJ,IAAI,IAAI,CAAtB;AACA,MAAIK,QAAQ,GAAGL,IAAI,IAAI,CAAvB;AACA,MAAIM,aAAa,GAAGN,IAAI,IAAI,CAA5B;AACA,MAAIO,QAAQ,GAAGP,IAAI,IAAI,CAAR,IAAaM,aAA5B;AACA,MAAIE,MAAM,GAAGP,cAAc,IAAIJ,kBAA/B;AACA,SAAO,UAAUY,KAAV,EAAiBC,UAAjB,EAA6BC,IAA7B,EAAmC;AACxC,QAAIC,CAAC,GAAGjB,QAAQ,CAACc,KAAD,CAAhB;AACA,QAAII,IAAI,GAAGnB,aAAa,CAACkB,CAAD,CAAxB;AACA,QAAIE,aAAa,GAAGtB,IAAI,CAACkB,UAAD,EAAaC,IAAb,EAAmB,CAAnB,CAAxB;AACA,QAAII,MAAM,GAAGnB,QAAQ,CAACiB,IAAI,CAACE,MAAN,CAArB;AACA,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,MAAM,GAAGf,MAAM,GAAGM,MAAM,CAACC,KAAD,EAAQM,MAAR,CAAT,GAA2BZ,SAAS,GAAGK,MAAM,CAACC,KAAD,EAAQ,CAAR,CAAT,GAAsBS,SAA7E;AACA,QAAIC,KAAJ,EAAWC,MAAX;;AACA,WAAML,MAAM,GAAGC,KAAf,EAAsBA,KAAK,EAA3B;AAA+B,UAAIT,QAAQ,IAAIS,KAAK,IAAIH,IAAzB,EAA+B;AAC5DM,QAAAA,KAAK,GAAGN,IAAI,CAACG,KAAD,CAAZ;AACAI,QAAAA,MAAM,GAAGN,aAAa,CAACK,KAAD,EAAQH,KAAR,EAAeJ,CAAf,CAAtB;;AACA,YAAIZ,IAAJ,EAAU;AACR,cAAIE,MAAJ,EAAYe,MAAM,CAACD,KAAD,CAAN,GAAgBI,MAAhB,CAAZ,CAAoC;AAApC,eACK,IAAIA,MAAJ,EAAY,QAAQpB,IAAR;AACf,mBAAK,CAAL;AAAQ,uBAAO,IAAP;AAA0B;;AAClC,mBAAK,CAAL;AAAQ,uBAAOmB,KAAP;AAA0B;;AAClC,mBAAK,CAAL;AAAQ,uBAAOH,KAAP;AAA0B;;AAClC,mBAAK,CAAL;AAAQC,gBAAAA,MAAM,CAACI,IAAP,CAAYF,KAAZ;AAA0B;AAJnB,aAAZ,MAKE,IAAId,QAAJ,EAAc,OAAO,KAAP,CAPb,CAO4B;AACrC;AACF;AAZD;;AAaA,WAAOC,aAAa,GAAG,CAAC,CAAJ,GAAQF,OAAO,IAAIC,QAAX,GAAsBA,QAAtB,GAAiCY,MAA7D;AACD,GAtBD;AAuBD,CA/BD","sourcesContent":["var bind = require('../internals/bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\n// 0 -> Array#forEach\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n// 1 -> Array#map\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// 2 -> Array#filter\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// 3 -> Array#some\n// https://tc39.github.io/ecma262/#sec-array.prototype.some\n// 4 -> Array#every\n// https://tc39.github.io/ecma262/#sec-array.prototype.every\n// 5 -> Array#find\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n// 6 -> Array#findIndex\n// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\nmodule.exports = function (TYPE, specificCreate) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = specificCreate || arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: target.push(value);       // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n"]},"metadata":{},"sourceType":"script"}