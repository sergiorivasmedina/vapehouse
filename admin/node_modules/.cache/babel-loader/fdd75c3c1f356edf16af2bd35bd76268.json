{"ast":null,"code":"'use strict';\n\nvar flattenIntoArray = require('../internals/flatten-into-array');\n\nvar toObject = require('../internals/to-object');\n\nvar toLength = require('../internals/to-length');\n\nvar aFunction = require('../internals/a-function');\n\nvar arraySpeciesCreate = require('../internals/array-species-create'); // `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\n\n\nrequire('../internals/export')({\n  target: 'Array',\n  proto: true\n}, {\n  flatMap: function flatMap(callbackfn\n  /* , thisArg */\n  ) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});","map":{"version":3,"sources":["/home/sergio/Documentos/react-templates/vapehouse/admin/node_modules/react-app-polyfill/node_modules/core-js/modules/es.array.flat-map.js"],"names":["flattenIntoArray","require","toObject","toLength","aFunction","arraySpeciesCreate","target","proto","flatMap","callbackfn","O","sourceLen","length","A","arguments"],"mappings":"AAAA;;AACA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,iCAAD,CAA9B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,mCAAD,CAAhC,C,CAEA;AACA;;;AACAA,OAAO,CAAC,qBAAD,CAAP,CAA+B;AAAEK,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAA/B,EAAiE;AAC/DC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC;AAAW;AAA5B,IAA6C;AACpD,QAAIC,CAAC,GAAGR,QAAQ,CAAC,IAAD,CAAhB;AACA,QAAIS,SAAS,GAAGR,QAAQ,CAACO,CAAC,CAACE,MAAH,CAAxB;AACA,QAAIC,CAAJ;AACAT,IAAAA,SAAS,CAACK,UAAD,CAAT;AACAI,IAAAA,CAAC,GAAGR,kBAAkB,CAACK,CAAD,EAAI,CAAJ,CAAtB;AACAG,IAAAA,CAAC,CAACD,MAAF,GAAWZ,gBAAgB,CAACa,CAAD,EAAIH,CAAJ,EAAOA,CAAP,EAAUC,SAAV,EAAqB,CAArB,EAAwB,CAAxB,EAA2BF,UAA3B,EAAuCK,SAAS,CAAC,CAAD,CAAhD,CAA3B;AACA,WAAOD,CAAP;AACD;AAT8D,CAAjE","sourcesContent":["'use strict';\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\nrequire('../internals/export')({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}